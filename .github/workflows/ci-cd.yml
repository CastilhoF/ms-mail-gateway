name: CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main    

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      NODE_ENV: ${{ env.NODE_ENV }}
      APP_NAME: ${{ env.APP_NAME }}
      APP_HOST: ${{ env.APP_HOST }}
      APP_PORT: ${{ env.APP_PORT }}
      APP_DESCRIPTION: ${{ env.APP_DESCRIPTION }}
      APP_URL: ${{ env.APP_URL }}
      APP_API_KEY: ${{ env.APP_API_KEY }}
      APP_GLOBAL_PREFIX: ${{ env.APP_GLOBAL_PREFIX }}
      SWAGGER_SERVER_APP_URL: ${{ env.SWAGGER_SERVER_APP_URL }}
      SWAGGER_APP_NAME: ${{ env.SWAGGER_APP_NAME }}
      JWT_SECRET: ${{ env.JWT_SECRET }}
      JWT_EXPIRATION_TIME: ${{ env.JWT_EXPIRATION_TIME }}
      CACHE_HOST: ${{ env.CACHE_HOST }}
      CACHE_PORT: ${{ env.CACHE_PORT }}
      CACHE_PASSWORD: ${{ env.CACHE_PASSWORD }}
      CACHE_DATABASE_LOGICAL: ${{ env.CACHE_DATABASE_LOGICAL }}
      CACHE_TTL: ${{ env.CACHE_TTL }}
      BULL_SEND_MAIL_QUEUE_NAME: ${{ env.BULL_SEND_MAIL_QUEUE_NAME }}
      BULL_SEND_MAIL_QUEUE_LIMITER: ${{ env.BULL_SEND_MAIL_QUEUE_LIMITER }}
      BULL_SEND_MAIL_QUEUE_DELAY: ${{ env.BULL_SEND_MAIL_QUEUE_DELAY }}
      DATABASE_PROTOCOL: ${{ env.DATABASE_PROTOCOL }}
      DATABASE_PORT: ${{ env.DATABASE_PORT }}
      DATABASE_HOST: ${{ env.DATABASE_HOST }}
      DATABASE_USER: ${{ env.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ env.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ env.DATABASE_NAME }}
      DATABASE_SYNCHRONIZE: ${{ env.DATABASE_SYNCHRONIZE }}
      TEMPLATE_PATH: ${{ env.TEMPLATE_PATH }}


    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build Docker image
      run: docker compose build
  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Run tests
      run: yarn start:test    

  deploy:
    needs: build
    runs-on: ubuntu-latest

    env:
      NODE_ENV: ${{ env.NODE_ENV }}
      APP_NAME: ${{ env.APP_NAME }}
      APP_HOST: ${{ env.APP_HOST }}
      APP_PORT: ${{ env.APP_PORT }}
      APP_DESCRIPTION: ${{ env.APP_DESCRIPTION }}
      APP_URL: ${{ env.APP_URL }}
      APP_API_KEY: ${{ env.APP_API_KEY }}
      APP_GLOBAL_PREFIX: ${{ env.APP_GLOBAL_PREFIX }}
      SWAGGER_SERVER_APP_URL: ${{ env.SWAGGER_SERVER_APP_URL }}
      SWAGGER_APP_NAME: ${{ env.SWAGGER_APP_NAME }}
      JWT_SECRET: ${{ env.JWT_SECRET }}
      JWT_EXPIRATION_TIME: ${{ env.JWT_EXPIRATION_TIME }}
      CACHE_HOST: ${{ env.CACHE_HOST }}
      CACHE_PORT: ${{ env.CACHE_PORT }}
      CACHE_PASSWORD: ${{ env.CACHE_PASSWORD }}
      CACHE_DATABASE_LOGICAL: ${{ env.CACHE_DATABASE_LOGICAL }}
      CACHE_TTL: ${{ env.CACHE_TTL }}
      BULL_SEND_MAIL_QUEUE_NAME: ${{ env.BULL_SEND_MAIL_QUEUE_NAME }}
      BULL_SEND_MAIL_QUEUE_LIMITER: ${{ env.BULL_SEND_MAIL_QUEUE_LIMITER }}
      BULL_SEND_MAIL_QUEUE_DELAY: ${{ env.BULL_SEND_MAIL_QUEUE_DELAY }}
      DATABASE_PROTOCOL: ${{ env.DATABASE_PROTOCOL }}
      DATABASE_PORT: ${{ env.DATABASE_PORT }}
      DATABASE_HOST: ${{ env.DATABASE_HOST }}
      DATABASE_USER: ${{ env.DATABASE_USER }}
      DATABASE_PASSWORD: ${{ env.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ env.DATABASE_NAME }}
      DATABASE_SYNCHRONIZE: ${{ env.DATABASE_SYNCHRONIZE }}
      TEMPLATE_PATH: ${{ env.TEMPLATE_PATH }}

    steps:
    - name: Configure SSH
      uses: webfactory/ssh-agent@v0.5.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Copy docker-compose.yml
      run: scp -i ${{ secrets.SSH_PRIVATE_KEY }} docker-compose.yml ubuntu@132.226.255.117:/var/containerized-apps/ms-mail-gateway

    - name: SSH into Oracle Cloud server
      run: |
        ssh -i ${{ secrets.SSH_PRIVATE_KEY }} ubuntu@132.226.255.117 'sudo su && cd /var/containerized-apps/ms-mail-gateway && git pull origin main && docker compose -f docker-compose.yml --env-file ./.env.production up --build -d'
