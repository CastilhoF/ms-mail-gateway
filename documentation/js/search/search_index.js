var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.492,1,2.149]],["body/modules/AppModule.html",[0,1.761,1,4.035,2,1.324,3,2.292,4,2.251,5,2.251,6,2.251,7,3.26,8,0.029,9,3.26,10,2.97,11,3.26,12,2.844,13,1.967,14,1.967,15,0.259,16,0.227,17,0.227,18,2.682,19,2.537,20,2.292,21,0.517,22,2.682,23,3.877,24,4.988,25,0.397,26,2.682,27,0.768,28,0.768,29,0.562,30,0.658,31,2.682,32,0.475,33,1.586,34,1.031,35,2.682,36,1.967,37,0.768,38,2.682,39,1.586,40,2.682,41,2.251,42,2.251,43,2.682,44,2.251,45,2.682,46,1.755,47,1.967,48,2.682,49,2.682,50,1.755,51,2.682,52,1.967,53,2.682,54,1.967,55,2.682,56,1.967,57,2.682,58,2.682,59,1.967,60,2.682,61,1.967,62,2.682,63,2.682,64,2.682,65,2.682,66,2.682,67,2.682,68,2.682,69,2.682,70,0.259,71,0.033,72,2.682,73,0.017,74,0.017]],["title/injectables/ApplicationEnvironment.html",[75,0.745,76,1.492]],["body/injectables/ApplicationEnvironment.html",[8,0.029,15,0.307,16,0.27,17,0.27,21,0.844,25,0.835,27,0.912,28,0.912,29,0.667,30,0.782,32,0.954,34,0.873,37,0.912,39,1.883,70,0.307,71,0.039,73,0.019,74,0.019,75,0.993,76,2.271,77,1.335,78,2.674,79,0.307,80,4.518,81,4.518,82,4.518,83,4.518,84,1.335,85,2.674,86,4.276,87,3.186,88,3.186,89,1.428,90,3.186,91,3.186,92,1.252,93,3.186,94,3.272,95,2.588,96,3.186,97,2.674,98,1.447,99,2.336,100,1.662,101,3.186,102,3.186,103,3.186,104,3.186,105,0.346]],["title/classes/ApplicationInterface.html",[71,0.041,95,1.941]],["body/classes/ApplicationInterface.html",[8,0.028,15,0.351,16,0.309,17,0.309,21,0.925,25,0.841,32,1.008,34,0.591,70,0.351,71,0.045,73,0.021,74,0.021,79,0.351,80,4.773,81,4.773,82,4.773,83,4.773,89,1.508,92,1.371,94,3.503,95,3.165,97,3.06,105,0.396,106,1.214,107,3.06,108,4.273,109,3.646,110,3.646,111,3.646,112,3.646]],["title/classes/BaseEntity.html",[71,0.041,113,1.941]],["body/classes/BaseEntity.html",[8,0.029,15,0.331,16,0.291,17,0.291,25,0.821,27,1.318,28,1.318,29,1.089,30,1.363,32,0.608,33,2.03,70,0.331,71,0.042,73,0.02,74,0.02,79,0.331,84,1.439,92,1.794,100,1.06,105,0.373,106,1.143,108,2.246,113,3.072,114,2.881,115,1.93,116,3.072,117,3.811,118,3.865,119,6.09,120,4.605,121,4.605,122,3.433,123,3.433,124,3.433,125,3.433,126,2.881,127,5.196,128,2.881,129,3.433]],["title/interfaces/BaseUseCase.html",[130,1.621,131,2.149]],["body/interfaces/BaseUseCase.html",[8,0.029,15,0.413,16,0.363,17,0.363,21,1.025,25,0.633,27,1.225,28,1.225,29,0.897,30,1.051,32,0.759,70,0.413,73,0.023,74,0.023,79,0.413,105,0.465,130,2.114,131,3.778,132,2.802,133,3.594,134,4.458,135,4.458,136,4.283,137,3.594,138,3.896,139,5.312]],["title/injectables/CacheEnvironment.html",[75,0.745,140,2.149]],["body/injectables/CacheEnvironment.html",[8,0.029,15,0.325,16,0.285,17,0.285,21,0.877,25,0.815,27,0.964,28,0.964,29,0.706,30,0.827,32,0.912,34,0.835,37,0.964,39,1.991,70,0.325,71,0.042,73,0.02,74,0.02,75,1.032,77,1.412,79,0.325,84,1.412,86,4.041,89,1.205,92,1.577,98,1.53,100,1.588,105,0.365,108,2.204,140,3.367,141,2.827,142,4.041,143,4.041,144,4.041,145,3.368,146,3.368,147,3.815,148,3.368,149,3.368,150,3.368,151,2.974,152,3.368,153,2.827,154,1.991,155,3.368,156,3.368,157,3.368]],["title/interfaces/CacheInterface.html",[130,1.621,151,2.149]],["body/interfaces/CacheInterface.html",[8,0.028,15,0.394,16,0.346,17,0.346,21,0.995,25,0.836,32,1.001,70,0.394,73,0.023,74,0.023,79,0.394,89,1.367,92,1.698,105,0.443,130,2.016,132,2.673,142,4.353,143,4.353,144,4.353,151,3.698,158,3.428,159,4.085,160,4.085,161,4.085]],["title/modules/CacheModule.html",[0,1.492,7,1.941]],["body/modules/CacheModule.html",[0,2.435,2,2.145,7,3.587,8,0.029,15,0.419,16,0.368,17,0.368,19,2.844,20,2.569,34,0.943,37,1.244,70,0.419,71,0.054,73,0.024,74,0.024,105,0.472,162,4.346,163,4.346,164,4.346,165,3.187,166,3.187,167,4.346,168,4.346]],["title/interfaces/CustomValidationInterface.html",[130,1.621,169,2.149]],["body/interfaces/CustomValidationInterface.html",[8,0.029,15,0.235,16,0.207,17,0.207,29,1.32,30,1.309,34,0.586,37,0.698,70,0.235,71,0.03,73,0.016,74,0.016,79,0.235,89,1.143,92,1.233,105,0.265,115,1.516,130,1.203,132,1.595,169,2.819,170,2.046,171,1.516,172,4.309,173,4,174,4,175,4,176,4,177,4,178,4.766,179,4,180,4,181,4.766,182,4,183,4,184,4,185,4,186,4.766,187,4,188,4,189,4,190,3.957,191,2.651,192,3.615,193,2.046,194,2.438]],["title/classes/CustomerEntity.html",[71,0.041,195,2.149]],["body/classes/CustomerEntity.html",[8,0.027,15,0.415,16,0.365,17,0.365,25,0.636,29,0.902,30,1.308,34,0.698,70,0.415,71,0.053,73,0.023,74,0.023,79,0.415,92,1.231,105,0.467,106,1.432,113,3.575,115,2.233,116,3.15,117,3.907,171,2.233,195,3.786,196,3.612,197,2.318,198,3.612,199,3.612]],["title/injectables/DatabaseEnvironment.html",[75,0.745,200,1.769]],["body/injectables/DatabaseEnvironment.html",[8,0.029,15,0.295,16,0.26,17,0.26,21,0.822,25,0.852,27,0.877,28,0.877,29,0.642,30,0.752,32,0.986,34,0.795,37,0.877,39,1.811,70,0.295,71,0.038,73,0.019,74,0.019,75,0.967,77,1.284,79,0.295,84,1.284,85,2.571,86,4.225,89,1.598,92,1.219,98,1.392,100,1.717,105,0.332,153,2.571,200,2.638,201,2.571,202,3.13,203,3.13,204,3.13,205,3.13,206,3.13,207,3.064,208,3.064,209,3.064,210,3.064,211,3.064,212,3.064,213,2.519,214,3.064,215,3.064,216,3.064,217,3.064,218,3.064,219,3.064]],["title/classes/DatabaseInterface.html",[71,0.041,213,1.941]],["body/classes/DatabaseInterface.html",[8,0.028,15,0.338,16,0.297,17,0.297,21,0.9,25,0.862,32,1.033,70,0.338,71,0.043,73,0.021,74,0.021,79,0.338,89,1.648,92,1.335,105,0.38,106,1.165,108,4.306,202,3.309,203,3.309,204,3.309,205,3.309,206,3.309,213,3.102,220,2.939,221,3.501,222,3.501,223,3.501,224,3.501,225,3.501]],["title/modules/DatabaseModule.html",[0,1.492,9,1.941]],["body/modules/DatabaseModule.html",[0,2.363,2,2.044,8,0.029,9,3.362,15,0.399,16,0.351,17,0.351,19,2.71,20,2.449,34,0.968,37,1.185,70,0.399,71,0.051,73,0.023,74,0.023,105,0.449,171,1.736,226,4.142,227,4.366,228,4.142,229,3.476,230,5.202,231,4.142,232,4.142,233,3.038,234,4.142,235,4.142,236,3.476]],["title/modules/EnvironmentModule.html",[0,1.492,10,1.769]],["body/modules/EnvironmentModule.html",[0,2.219,2,1.853,3,2.888,8,0.028,10,3.399,12,3.583,13,2.754,14,2.754,15,0.362,16,0.318,17,0.318,19,3.197,20,2.22,34,0.881,37,1.074,70,0.362,71,0.046,73,0.022,74,0.022,76,2.963,236,4.1,237,3.151,238,3.151,239,3.151,240,3.399,241,3.755,242,2.754,243,3.755]],["title/injectables/HttpOptions.html",[75,0.745,244,2.149]],["body/injectables/HttpOptions.html",[8,0.029,15,0.381,16,0.335,17,0.335,21,0.975,25,0.585,32,0.701,34,0.82,36,2.902,37,1.132,70,0.381,71,0.049,73,0.022,74,0.022,75,1.147,77,1.659,79,0.381,98,1.797,100,1.221,105,0.429,138,3.706,244,3.643,245,3.32,246,5.867,247,3.956,248,5.568,249,5.053,250,3.956,251,2.902,252,3.956,253,3.32]],["title/classes/MongooseEnvironment.html",[71,0.041,240,1.769]],["body/classes/MongooseEnvironment.html",[8,0.028,15,0.331,16,0.291,17,0.291,21,0.888,25,0.882,32,1.056,34,0.557,70,0.331,71,0.042,73,0.02,74,0.02,79,0.331,89,1.472,92,0.982,100,1.06,105,0.373,106,1.143,171,1.93,190,2.722,197,3.119,200,3.334,202,3.072,203,3.072,204,3.072,205,3.072,206,3.072,240,2.799,254,2.881,255,5.553,256,3.433,257,2.518,258,2.518,259,2.518,260,2.518,261,2.518,262,2.518,263,3.433]],["title/injectables/MysqlOptions.html",[75,0.745,264,2.149]],["body/injectables/MysqlOptions.html",[8,0.028,15,0.259,16,0.227,17,0.227,21,0.748,25,0.673,27,0.768,28,0.768,29,0.954,30,0.658,32,0.475,34,0.858,37,0.768,70,0.259,71,0.033,73,0.017,74,0.017,75,0.88,76,2.266,77,1.124,79,0.259,84,1.625,94,1.755,98,1.218,100,0.828,105,0.291,115,1.625,116,3.128,154,3.128,190,2.292,242,1.967,251,1.967,264,2.979,265,4.186,266,2.251,267,4.553,268,4.988,269,2.682,270,3.821,271,4.988,272,3.877,273,3.254,274,2.682,275,4.553,276,3.877,277,2.251,278,2.682,279,2.682,280,2.682,281,4.988,282,2.682,283,2.251,284,2.682,285,1.967,286,2.682,287,1.967,288,2.682,289,2.682,290,2.682,291,2.251,292,2.682,293,1.967,294,2.682,295,2.682,296,2.682,297,2.682,298,3.881,299,2.251,300,1.586,301,3.821,302,2.251,303,2.251,304,2.251,305,2.251,306,2.682,307,2.251,308,2.251,309,2.251,310,2.682,311,2.251,312,2.682,313,2.251,314,2.682,315,2.251,316,2.682,317,2.682,318,2.251,319,2.251,320,2.251,321,2.251,322,1.967]],["title/classes/MysqlRawEnvironment.html",[71,0.041,323,2.149]],["body/classes/MysqlRawEnvironment.html",[8,0.028,15,0.35,16,0.308,17,0.308,21,0.922,25,0.872,32,1.045,34,0.589,70,0.35,71,0.045,73,0.021,74,0.021,79,0.35,89,1.506,92,1.039,105,0.394,106,1.209,171,2.004,197,3.178,200,3.375,202,3.159,203,3.159,204,3.159,205,3.159,206,3.159,257,2.663,258,2.663,259,2.663,260,2.663,261,2.663,262,2.663,323,3.496,324,3.047,325,3.047]],["title/classes/MysqlTypeOrmEnvironment.html",[71,0.041,326,2.149]],["body/classes/MysqlTypeOrmEnvironment.html",[8,0.028,15,0.328,16,0.289,17,0.289,21,0.884,25,0.88,32,1.054,34,0.553,70,0.328,71,0.042,73,0.02,74,0.02,79,0.328,89,1.468,92,0.975,100,1.051,105,0.37,106,1.134,171,1.92,190,2.708,197,3.111,200,3.328,202,3.06,203,3.06,204,3.06,205,3.06,206,3.06,257,2.499,258,2.499,259,2.499,260,2.499,261,2.499,262,2.499,326,3.387,327,3.845,328,2.859,329,5.536,330,3.407,331,3.407]],["title/classes/RedisEnvironment.html",[71,0.041,332,1.941]],["body/classes/RedisEnvironment.html",[8,0.028,15,0.359,16,0.316,17,0.316,21,0.937,25,0.848,32,1.016,34,0.604,70,0.359,71,0.046,73,0.021,74,0.021,79,0.359,89,0.987,92,1.641,100,1.149,105,0.404,106,1.239,140,3.991,142,3.967,143,3.967,144,3.967,171,2.037,197,2.913,332,3.197,333,3.124,334,5.733,335,3.723,336,3.723,337,3.723,338,3.723,339,3.723,340,3.723]],["title/injectables/RedisOptionsFactory.html",[75,0.745,341,2.149]],["body/injectables/RedisOptionsFactory.html",[8,0.029,15,0.33,16,0.29,17,0.29,21,0.886,25,0.679,27,0.979,28,0.979,29,0.716,30,0.84,32,0.606,34,0.841,37,0.979,70,0.33,71,0.042,73,0.02,74,0.02,75,1.043,77,1.434,79,0.33,84,1.434,98,1.553,99,2.508,100,1.056,105,0.371,154,2.022,165,2.508,285,2.508,287,2.508,293,2.508,298,2.508,300,2.022,332,3.278,341,3.393,342,4.353,343,3.804,344,2.87,345,5.544,346,3.42,347,3.42,348,4.593,349,3.42,350,5.186,351,4.593,352,4.593,353,2.87,354,3.855,355,3.42,356,3.42,357,3.42,358,3.42,359,2.87,360,3.42,361,2.87,362,3.42,363,3.42]],["title/classes/RegisterUseCase.html",[71,0.041,364,2.409]],["body/classes/RegisterUseCase.html",[8,0.029,15,0.383,16,0.337,17,0.337,21,0.978,25,0.588,27,1.137,28,1.137,29,0.833,30,0.976,32,0.704,34,0.822,70,0.383,71,0.049,73,0.022,74,0.022,79,0.383,98,2.302,105,0.431,106,1.323,131,3.651,134,4.253,135,4.253,137,3.335,138,3.717,195,3.651,364,4.092,365,3.335,366,3.974,367,3.974,368,3.974,369,3.335,370,2.141,371,3.974,372,3.974]],["title/injectables/RequestMiddleware.html",[50,2.149,75,0.745]],["body/injectables/RequestMiddleware.html",[8,0.029,15,0.275,16,0.242,17,0.242,21,0.782,25,0.697,27,1.16,28,1.16,29,0.988,30,0.996,32,0.719,33,2.788,34,0.463,37,0.817,50,2.653,70,0.275,71,0.035,73,0.018,74,0.018,75,0.92,77,1.197,79,0.275,89,0.757,98,1.297,100,0.881,105,0.31,115,1.7,116,2.788,154,2.788,191,2.094,300,2.397,370,2.184,373,2.397,374,5.632,375,4.055,376,4.055,377,4.055,378,6.023,379,2.856,380,4.055,381,4.055,382,4.055,383,3.403,384,4.055,385,4.055,386,4.055,387,5.632,388,5.133,389,2.856,390,1.869,391,4.055,392,2.856,393,4.055,394,2.856,395,2.856,396,2.856,397,2.856,398,2.856,399,2.856,400,2.856,401,2.856,402,2.856,403,2.856,404,2.856,405,2.856]],["title/classes/State.html",[71,0.041,406,2.149]],["body/classes/State.html",[8,0.029,15,0.243,16,0.214,17,0.214,21,0.715,25,0.846,27,1.257,28,1.723,29,1.131,30,1.267,32,0.657,33,1.491,34,0.713,70,0.243,71,0.031,73,0.016,74,0.016,79,0.243,84,1.057,89,1.165,92,0.722,100,1.356,105,0.274,106,0.839,113,2.864,115,1.554,116,3.383,117,2.718,118,3.111,128,2.116,171,1.554,190,2.191,197,1.358,198,2.116,199,2.116,369,3.111,370,1.996,406,2.875,407,2.116,408,4.395,409,4.395,410,3.706,411,4.395,412,3.706,413,5.164,414,3.706,415,2.521,416,3.706,417,2.521,418,2.521,419,2.521,420,2.521,421,2.521,422,2.521,423,2.521,424,2.521,425,1.65,426,2.521,427,2.521,428,2.521,429,2.718,430,4.845,431,3.706,432,3.706,433,4.395,434,4.395,435,3.706,436,2.521,437,2.521]],["title/classes/StateInvalidException.html",[71,0.041,425,2.149]],["body/classes/StateInvalidException.html",[8,0.029,15,0.332,16,0.292,17,0.292,25,0.823,27,0.986,28,1.591,29,1.165,30,0.846,70,0.332,71,0.043,73,0.02,74,0.02,79,0.332,84,1.445,89,1.708,105,0.374,106,1.147,115,1.936,126,2.893,171,1.936,390,3.021,406,2.255,425,3.407,438,4.867,439,2.893,440,3.875,441,5.207,442,6.096,443,4.617,444,4.617,445,3.447,446,3.447,447,3.447,448,3.447,449,3.447,450,3.447,451,3.447]],["title/injectables/SwaggerOptions.html",[11,1.941,75,0.745]],["body/injectables/SwaggerOptions.html",[8,0.029,11,3.036,15,0.323,16,0.284,17,0.284,21,0.875,25,0.671,27,1.297,28,1.297,29,0.95,30,1.113,32,0.594,33,1.983,34,0.833,37,0.96,70,0.323,71,0.041,73,0.02,74,0.02,75,1.029,76,2.499,77,1.406,79,0.323,84,1.406,99,2.461,105,0.364,147,3.805,154,1.983,242,2.461,370,1.807,429,3.325,452,2.816,453,4.534,454,3.355,455,3.355,456,4.534,457,4.534,458,4.617,459,3.355,460,3.325,461,4.534,462,3.355,463,3.355,464,2.816,465,3.355,466,3.355,467,3.355,468,3.355,469,3.355,470,2.195,471,3.355,472,3.355,473,2.816,474,3.355,475,4.534,476,3.355,477,3.355]],["title/coverage.html",[478,3.278]],["body/coverage.html",[8,0.029,11,1.085,17,0.156,29,0.384,50,1.201,52,1.346,54,1.346,56,1.346,59,1.346,61,1.346,71,0.069,73,0.013,74,0.013,75,1.174,76,0.833,78,1.54,95,1.085,107,1.54,113,1.085,114,1.54,130,1.782,131,1.201,133,1.54,140,1.201,141,1.54,151,1.201,158,1.54,166,1.346,169,1.201,170,1.54,191,2.648,195,1.201,196,1.54,200,0.988,201,1.54,213,1.085,220,1.54,233,1.346,240,0.988,244,1.201,245,1.54,254,1.54,264,1.201,265,1.54,266,1.54,323,1.201,324,1.54,325,1.54,326,1.201,327,1.54,328,1.54,332,1.085,333,1.54,341,1.201,342,1.54,343,1.346,344,1.54,364,1.346,365,1.54,370,0.988,373,1.54,406,1.201,407,1.54,425,1.201,438,1.54,439,1.54,452,1.54,478,1.346,479,1.835,480,1.835,481,1.835,482,6.589,483,3.61,484,4.107,485,4.107,486,4.107,487,3.61,488,3.61,489,1.54,490,6.259,491,1.54,492,6.259,493,1.54,494,1.54,495,1.54,496,1.54,497,1.54,498,1.54,499,1.54,500,1.54,501,1.54,502,1.54,503,1.54,504,1.54,505,1.54,506,1.54,507,1.54,508,1.54,509,1.54,510,1.54,511,2.44,512,2.44,513,1.54,514,4.343,515,1.54,516,1.54,517,1.54,518,1.54,519,1.54,520,1.54,521,1.835,522,1.54,523,1.54,524,1.54,525,1.54,526,3.03,527,1.54,528,3.03,529,3.61,530,1.54,531,1.346,532,1.835,533,1.835]],["title/dependencies.html",[3,2.333,534,2.307]],["body/dependencies.html",[3,2.03,8,0.03,36,2.518,37,0.982,39,2.03,41,2.881,42,2.881,44,2.881,46,2.246,47,3.377,71,0.057,73,0.02,74,0.02,165,2.518,193,2.881,229,2.881,277,2.881,300,2.722,307,2.881,353,3.865,354,2.881,464,2.881,535,3.433,536,5.196,537,3.433,538,3.433,539,3.433,540,3.433,541,3.433,542,3.433,543,3.433,544,3.433,545,3.433,546,3.433,547,3.433,548,3.433,549,3.433,550,3.433,551,3.433,552,3.433,553,3.433,554,3.433,555,3.433,556,3.433,557,3.433,558,3.433,559,3.433,560,3.433,561,3.433,562,3.433,563,3.433,564,3.433,565,3.433,566,3.433,567,3.433,568,3.433,569,3.433,570,3.433,571,3.433]],["title/miscellaneous/enumerations.html",[572,1.481,573,3.312]],["body/miscellaneous/enumerations.html",[8,0.029,73,0.017,74,0.017,79,0.251,94,2.482,322,2.782,390,4.365,413,3.184,572,1.402,573,2.185,574,2.603,575,3.794,576,2.603,577,3.794,578,2.603,579,2.603,580,2.782,581,3.757,582,3.283,583,2.603,584,2.603,585,2.603,586,2.603,587,2.603,588,2.603,589,2.603,590,2.603,591,2.603,592,2.603,593,2.603,594,2.603,595,2.603,596,2.603,597,2.603,598,2.603,599,2.603,600,2.603,601,2.603,602,2.603,603,2.603,604,2.603,605,2.603,606,2.603,607,2.603,608,2.603,609,2.603,610,2.603,611,2.603,612,2.603,613,3.794,614,3.794,615,2.603,616,3.794,617,2.603,618,2.603,619,2.603,620,2.603,621,2.603,622,2.603,623,2.603,624,2.603,625,2.603,626,2.603,627,2.603,628,2.603,629,2.603,630,2.603,631,4.476,632,2.603,633,2.603,634,2.603,635,3.794,636,2.603,637,2.603,638,2.603,639,2.603,640,2.603,641,2.603,642,2.603,643,2.603,644,2.603,645,2.603,646,2.603,647,2.603,648,2.603,649,2.603,650,2.603]],["title/miscellaneous/functions.html",[572,1.481,651,3.312]],["body/miscellaneous/functions.html",[8,0.026,27,1.484,28,1.484,29,1.087,30,1.273,46,3.713,73,0.023,74,0.023,79,0.397,458,4.998,460,3.804,470,3.394,526,3.46,527,4.998,530,4.353,531,4.162,572,2.22,651,3.46,652,5.675,653,4.123,654,4.123,655,4.123,656,5.187,657,4.123,658,4.123]],["title/index.html",[79,0.265,659,2.749,660,2.749]],["body/index.html",[8,0.029,16,0.285,46,3.367,73,0.02,74,0.02,383,3.815,460,2.47,470,2.204,478,2.47,531,2.47,580,2.47,582,2.47,661,3.368,662,3.368,663,4.546,664,3.368,665,3.368,666,3.368,667,3.368,668,3.368,669,3.368,670,3.368,671,3.368,672,3.368,673,3.368,674,6.06,675,3.368,676,5.929,677,3.368,678,3.368,679,3.368,680,3.368,681,4.546,682,4.546,683,3.368,684,3.368,685,3.368,686,4.546,687,4.546,688,3.368,689,3.368,690,3.368,691,3.368,692,3.368,693,2.827,694,3.368,695,3.368,696,3.368,697,3.368,698,3.368,699,3.368,700,3.368,701,3.368,702,3.368,703,3.368,704,2.827,705,3.368,706,3.368,707,3.368,708,3.368,709,3.368,710,3.368,711,2.827]],["title/modules.html",[2,2.206]],["body/modules.html",[1,3.054,2,2.304,7,2.759,8,0.025,9,2.759,10,2.514,73,0.025,74,0.025,693,4.698,712,5.598,713,5.598,714,6.218,715,5.598,716,5.598]],["title/overview.html",[717,3.751]],["body/overview.html",[1,4.212,2,1.853,3,2.888,4,3.151,5,3.151,6,3.151,7,3.211,8,0.028,9,3.211,10,3.353,11,3.211,12,3.583,13,2.754,14,2.754,73,0.022,74,0.022,76,2.827,77,1.574,106,1.25,132,2.457,237,3.151,238,3.151,239,3.151,240,3.098,717,3.151,718,3.755,719,3.755,720,3.755,721,3.755]],["title/properties.html",[115,1.654,534,2.307]],["body/properties.html",[8,0.029,73,0.025,74,0.025,115,2.043,470,3.189,704,4.09,711,4.09,722,4.874,723,4.874,724,4.874]],["title/miscellaneous/variables.html",[572,1.481,725,3.312]],["body/miscellaneous/variables.html",[8,0.029,10,0.589,20,0.647,29,1.077,47,0.802,52,1.387,54,1.387,56,1.387,59,1.387,61,1.387,73,0.008,74,0.008,76,1.353,79,0.105,89,0.29,95,1.118,100,1.349,105,0.619,166,1.387,169,0.716,173,0.918,174,0.918,175,0.918,176,0.918,177,0.918,179,0.918,180,0.918,182,0.918,183,0.918,184,0.918,185,0.918,187,0.918,188,0.918,189,0.918,213,0.647,227,0.918,233,1.387,240,1.019,244,0.716,251,0.802,253,1.588,264,0.716,270,1.588,273,1.588,283,2.499,285,1.387,287,1.833,291,0.918,293,0.802,298,4.274,299,0.918,300,0.647,301,4.148,302,0.918,303,0.918,304,0.918,305,0.918,308,0.918,309,2.499,311,0.918,313,0.918,315,0.918,318,1.588,319,0.918,320,0.918,321,0.918,322,1.833,323,0.716,326,1.238,332,0.647,341,0.716,343,0.802,359,0.918,361,1.588,370,1.604,390,3.736,429,3.624,440,0.918,473,1.588,489,0.918,491,2.098,493,0.918,494,1.588,495,2.098,496,0.918,497,0.918,498,2.098,499,0.918,500,1.588,501,2.499,502,0.918,503,0.918,504,0.918,505,0.918,506,0.918,507,1.588,508,1.588,509,0.918,510,1.588,511,0.918,512,2.098,513,2.499,514,0.918,515,1.588,516,2.098,517,1.588,518,2.098,519,2.098,520,0.918,522,0.918,523,1.588,524,0.918,525,2.098,528,0.918,572,0.589,580,1.387,581,1.588,582,1.387,725,0.918,726,1.892,727,4.177,728,1.094,729,1.094,730,1.094,731,1.094,732,1.094,733,1.094,734,1.094,735,1.892,736,1.094,737,1.094,738,1.094,739,1.094,740,1.094,741,1.094,742,1.094,743,1.892,744,1.892,745,1.892,746,1.892,747,1.094,748,1.094,749,1.094,750,1.094,751,1.094,752,1.094,753,1.892,754,1.094,755,1.094,756,1.094,757,1.094,758,1.094,759,1.094,760,1.094,761,1.094,762,1.094,763,1.094,764,1.094,765,1.094,766,1.892,767,1.094,768,1.094,769,1.094,770,1.094,771,1.094,772,1.094,773,1.094,774,1.094,775,1.094,776,1.094,777,1.094,778,1.094,779,1.892,780,1.892,781,1.892,782,1.094,783,1.094,784,1.094,785,1.094,786,1.094,787,3.95,788,1.094,789,1.094,790,1.892,791,1.094,792,1.094,793,1.094,794,1.892,795,1.094,796,1.094,797,1.094,798,1.094,799,1.094,800,1.094,801,1.094,802,1.094,803,1.094,804,1.094,805,1.094,806,1.094,807,1.094,808,1.094,809,1.094,810,1.892,811,1.094,812,1.094,813,1.094,814,1.094,815,1.892,816,1.094,817,1.094,818,2.978,819,1.094,820,1.094,821,1.094,822,1.892,823,1.094,824,2.5,825,4.177,826,1.892,827,1.892,828,1.094,829,1.892,830,1.892,831,2.978,832,1.094,833,1.094,834,1.094,835,1.094,836,1.094,837,1.094,838,1.094,839,1.094,840,1.892,841,1.094,842,1.094,843,1.094,844,1.094,845,1.094,846,1.094,847,1.094,848,1.094,849,1.892,850,1.094,851,1.892,852,1.892,853,1.094,854,1.892,855,2.5,856,1.094,857,1.094,858,1.094,859,1.094,860,1.094,861,1.094,862,1.094,863,1.094,864,1.094,865,1.094,866,1.094,867,1.094,868,1.094,869,1.094,870,1.892,871,1.094,872,1.094,873,1.094,874,1.094,875,1.094,876,1.094,877,1.892,878,1.094,879,1.094,880,1.094,881,1.094,882,1.094]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"modules/CacheModule.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":723,"title":{},"body":{"properties.html":{}}}],["0.1.0",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":564,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["0.3.10",{"_index":570,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":521,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["1.3.1",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["1.4.6",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["1.7.0",{"_index":561,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":315,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":528,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":363,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["10000",{"_index":305,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["11",{"_index":720,"title":{},"body":{"overview.html":{}}}],["17.6.1",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["2.0.0",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["2.3.3",{"_index":560,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":721,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":566,"title":{},"body":{"dependencies.html":{}}}],["3.8.2",{"_index":571,"title":{},"body":{"dependencies.html":{}}}],["30000",{"_index":318,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":718,"title":{},"body":{"overview.html":{}}}],["4.1.0",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":251,"title":{},"body":{"injectables/HttpOptions.html":{},"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5000",{"_index":253,"title":{},"body":{"injectables/HttpOptions.html":{},"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["6.1.2",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["6.6.2",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.2.0",{"_index":568,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":719,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["9.2.0",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":117,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CustomerEntity.html":{},"classes/State.html":{}}}],["_initials",{"_index":408,"title":{},"body":{"classes/State.html":{}}}],["_name",{"_index":409,"title":{},"body":{"classes/State.html":{}}}],["abstract",{"_index":108,"title":{},"body":{"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"injectables/CacheEnvironment.html":{},"classes/DatabaseInterface.html":{}}}],["ac",{"_index":591,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["accessors",{"_index":118,"title":{},"body":{"classes/BaseEntity.html":{},"classes/State.html":{}}}],["acre",{"_index":592,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["addtag('music",{"_index":472,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["al",{"_index":593,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["alagoas",{"_index":594,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["always",{"_index":173,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["amap",{"_index":596,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["amazing",{"_index":694,"title":{},"body":{"index.html":{}}}],["amazonas",{"_index":597,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ap",{"_index":595,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["api",{"_index":469,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["app",{"_index":460,"title":{},"body":{"injectables/SwaggerOptions.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["app_host",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_name",{"_index":786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_port",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application",{"_index":658,"title":{},"body":{"miscellaneous/functions.html":{}}}],["application.interface",{"_index":96,"title":{},"body":{"injectables/ApplicationEnvironment.html":{}}}],["applicationconfig",{"_index":273,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig.getappname",{"_index":835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationconfig.getnodeenv",{"_index":826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationenvironment",{"_index":76,"title":{"injectables/ApplicationEnvironment.html":{}},"body":{"injectables/ApplicationEnvironment.html":{},"modules/EnvironmentModule.html":{},"injectables/MysqlOptions.html":{},"injectables/SwaggerOptions.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["applicationinterface",{"_index":95,"title":{"classes/ApplicationInterface.html":{}},"body":{"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["applications",{"_index":669,"title":{},"body":{"index.html":{}}}],["applicationservice",{"_index":456,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["args",{"_index":137,"title":{},"body":{"interfaces/BaseUseCase.html":{},"classes/RegisterUseCase.html":{}}}],["author",{"_index":704,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autocreate",{"_index":836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoindex",{"_index":837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoloadentities",{"_index":297,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["available",{"_index":716,"title":{},"body":{"modules.html":{}}}],["ba",{"_index":598,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["backers",{"_index":695,"title":{},"body":{"index.html":{}}}],["bahia",{"_index":599,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["base.entity",{"_index":199,"title":{},"body":{"classes/CustomerEntity.html":{},"classes/State.html":{}}}],["base.usecase",{"_index":368,"title":{},"body":{"classes/RegisterUseCase.html":{}}}],["base/environment/cache.environment",{"_index":339,"title":{},"body":{"classes/RedisEnvironment.html":{}}}],["base/environment/database.environment",{"_index":262,"title":{},"body":{"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{}}}],["baseentity",{"_index":113,"title":{"classes/BaseEntity.html":{}},"body":{"classes/BaseEntity.html":{},"classes/CustomerEntity.html":{},"classes/State.html":{},"coverage.html":{}}}],["baseentity:2",{"_index":198,"title":{},"body":{"classes/CustomerEntity.html":{},"classes/State.html":{}}}],["baseusecase",{"_index":131,"title":{"interfaces/BaseUseCase.html":{}},"body":{"interfaces/BaseUseCase.html":{},"classes/RegisterUseCase.html":{},"coverage.html":{}}}],["bignumberstrings",{"_index":299,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":381,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["boolean",{"_index":190,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/State.html":{}}}],["bootstrap",{"_index":527,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":714,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":712,"title":{},"body":{"modules.html":{}}}],["build",{"_index":474,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["building",{"_index":664,"title":{},"body":{"index.html":{}}}],["cache",{"_index":300,"title":{},"body":{"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"injectables/RequestMiddleware.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cache.interface",{"_index":152,"title":{},"body":{"injectables/CacheEnvironment.html":{}}}],["cache/cache.module",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["cache_database_logical",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache_host",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache_port",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cache_ttl",{"_index":795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cacheconfig",{"_index":348,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["cacheenvironment",{"_index":140,"title":{"injectables/CacheEnvironment.html":{}},"body":{"injectables/CacheEnvironment.html":{},"classes/RedisEnvironment.html":{},"coverage.html":{}}}],["cacheenvironment:13",{"_index":337,"title":{},"body":{"classes/RedisEnvironment.html":{}}}],["cacheenvironment:17",{"_index":338,"title":{},"body":{"classes/RedisEnvironment.html":{}}}],["cacheenvironment:9",{"_index":336,"title":{},"body":{"classes/RedisEnvironment.html":{}}}],["cacheinterface",{"_index":151,"title":{"interfaces/CacheInterface.html":{}},"body":{"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"coverage.html":{}}}],["cachemodule",{"_index":7,"title":{"modules/CacheModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules.html":{},"overview.html":{}}}],["cachemoduleasyncoptions",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cachemodulenative",{"_index":163,"title":{},"body":{"modules/CacheModule.html":{}}}],["cachemodulenative.registerasync(redismoduleoptions",{"_index":168,"title":{},"body":{"modules/CacheModule.html":{}}}],["cachemoduleoptions",{"_index":350,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["cacheoptionsfactory",{"_index":351,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["case",{"_index":818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catarina",{"_index":644,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cats",{"_index":468,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["ce",{"_index":600,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["cear",{"_index":601,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["charset",{"_index":302,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":71,"title":{"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"classes/CustomerEntity.html":{},"classes/DatabaseInterface.html":{},"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"classes/RegisterUseCase.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{}},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"injectables/CacheEnvironment.html":{},"modules/CacheModule.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":106,"title":{},"body":{"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"classes/CustomerEntity.html":{},"classes/DatabaseInterface.html":{},"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"classes/RegisterUseCase.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"overview.html":{}}}],["clientopts",{"_index":164,"title":{},"body":{"modules/CacheModule.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_environmentmodule",{"_index":237,"title":{},"body":{"modules/EnvironmentModule.html":{},"overview.html":{}}}],["cluster_environmentmodule_exports",{"_index":238,"title":{},"body":{"modules/EnvironmentModule.html":{},"overview.html":{}}}],["cluster_environmentmodule_providers",{"_index":239,"title":{},"body":{"modules/EnvironmentModule.html":{},"overview.html":{}}}],["colors",{"_index":752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compress",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":147,"title":{},"body":{"injectables/CacheEnvironment.html":{},"injectables/SwaggerOptions.html":{}}}],["configmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot(environmentoptions",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["configmoduleoptions",{"_index":768,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice",{"_index":86,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"injectables/CacheEnvironment.html":{},"injectables/DatabaseEnvironment.html":{}}}],["configurablemodulebuilder().setclassmethodname('forroot').build",{"_index":741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurablemoduleclass",{"_index":230,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configure",{"_index":22,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":23,"title":{},"body":{"modules/AppModule.html":{}}}],["connection_pool",{"_index":513,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["connectionlimit",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connectorpackage",{"_index":306,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["connecttimeout",{"_index":304,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["connecttimeoutms",{"_index":838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console(consoleoptions",{"_index":763,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consoleoptions",{"_index":515,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consoletransportinstance",{"_index":762,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consoletransportoptions",{"_index":742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":429,"title":{},"body":{"classes/State.html":{},"injectables/SwaggerOptions.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":84,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"classes/BaseEntity.html":{},"injectables/CacheEnvironment.html":{},"injectables/DatabaseEnvironment.html":{},"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{}}}],["constructor(applicationconfig",{"_index":269,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["constructor(applicationservice",{"_index":454,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["constructor(cacheconfig",{"_index":346,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["constructor(config",{"_index":145,"title":{},"body":{"injectables/CacheEnvironment.html":{}}}],["constructor(configservice",{"_index":85,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"injectables/DatabaseEnvironment.html":{}}}],["constructor(id",{"_index":120,"title":{},"body":{"classes/BaseEntity.html":{}}}],["constructor(name",{"_index":412,"title":{},"body":{"classes/State.html":{}}}],["constructor(private",{"_index":99,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"injectables/SwaggerOptions.html":{}}}],["constructor(protected",{"_index":153,"title":{},"body":{"injectables/CacheEnvironment.html":{},"injectables/DatabaseEnvironment.html":{}}}],["constructor(value",{"_index":443,"title":{},"body":{"classes/StateInvalidException.html":{}}}],["consumer",{"_index":31,"title":{},"body":{"modules/AppModule.html":{}}}],["consumer.apply(requestmiddleware).forroutes",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["controllers",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["cookie",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["core/middleware/request.middleware",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["coverage",{"_index":478,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createcacheoptions",{"_index":345,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["createhttpoptions",{"_index":246,"title":{},"body":{"injectables/HttpOptions.html":{}}}],["createpool",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createtypeormoptions",{"_index":268,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["credentials",{"_index":384,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["customerentity",{"_index":195,"title":{"classes/CustomerEntity.html":{}},"body":{"classes/CustomerEntity.html":{},"classes/RegisterUseCase.html":{},"coverage.html":{}}}],["customvalidationinterface",{"_index":169,"title":{"interfaces/CustomValidationInterface.html":{}},"body":{"interfaces/CustomValidationInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":293,"title":{},"body":{"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["database.interface",{"_index":214,"title":{},"body":{"injectables/DatabaseEnvironment.html":{}}}],["database/database.module",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["database/mongo/environment/mongoose.environment",{"_index":243,"title":{},"body":{"modules/EnvironmentModule.html":{}}}],["database_host",{"_index":796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_name",{"_index":801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_password",{"_index":800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_port",{"_index":797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_protocol",{"_index":804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_syncronize",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database_user",{"_index":799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":270,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig.getdatabasehost",{"_index":829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconfig.getdatabasename",{"_index":840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconfig.getdatabasepassword",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconfig.getdatabaseport",{"_index":830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconfig.getdatabaseprotocol",{"_index":828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseconfig.getdatabaseuser",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["databaseenvironment",{"_index":200,"title":{"injectables/DatabaseEnvironment.html":{}},"body":{"injectables/DatabaseEnvironment.html":{},"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"coverage.html":{}}}],["databaseenvironment:13",{"_index":260,"title":{},"body":{"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{}}}],["databaseenvironment:17",{"_index":261,"title":{},"body":{"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{}}}],["databaseenvironment:21",{"_index":259,"title":{},"body":{"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{}}}],["databaseenvironment:25",{"_index":258,"title":{},"body":{"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{}}}],["databaseenvironment:9",{"_index":257,"title":{},"body":{"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{}}}],["databaseinterface",{"_index":213,"title":{"classes/DatabaseInterface.html":{}},"body":{"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databasemodule",{"_index":9,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["datestrings",{"_index":308,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["dbname",{"_index":839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["de",{"_index":632,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["debug",{"_index":309,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["decimalnumbers",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":105,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"modules/CacheModule.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"modules/DatabaseModule.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{}}}],["definition",{"_index":232,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["definitions.ts",{"_index":512,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["delimiter",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/EnvironmentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":470,"title":{},"body":{"injectables/SwaggerOptions.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["destination",{"_index":385,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["development",{"_index":580,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development_local",{"_index":584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["development_server",{"_index":586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["df",{"_index":602,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["dir_path",{"_index":516,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["dirname",{"_index":757,"title":{},"body":{"miscellaneous/variables.html":{}}}],["disableerrormessages",{"_index":174,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["dismissdefaultmessages",{"_index":175,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["distrito",{"_index":603,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["document",{"_index":475,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["documentation",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["documentbuilder",{"_index":461,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["dropschema",{"_index":310,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["e2e",{"_index":683,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":665,"title":{},"body":{"index.html":{}}}],["emitter",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["enabledebugmessages",{"_index":176,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["enablekeepalive",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enableutf8validation",{"_index":841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encoding",{"_index":769,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entity/environment.entity",{"_index":97,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{}}}],["enumerations",{"_index":573,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env.development",{"_index":587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["env.local",{"_index":585,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["env.production",{"_index":589,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["env.testing",{"_index":588,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["envfilepath",{"_index":771,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment.helper.ts",{"_index":500,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.module",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["environment/base/application.environment",{"_index":242,"title":{},"body":{"modules/EnvironmentModule.html":{},"injectables/MysqlOptions.html":{},"injectables/SwaggerOptions.html":{}}}],["environment/entity/environment.entity",{"_index":278,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["environment/environment.options",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["environment/mysql",{"_index":279,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["environment/redis.environment",{"_index":355,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["environmententity",{"_index":94,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"injectables/MysqlOptions.html":{},"miscellaneous/enumerations.html":{}}}],["environmententity.development",{"_index":780,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environmententity.local",{"_index":779,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environmententity.production",{"_index":283,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["environmententity.testing",{"_index":781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environmentfileentity",{"_index":575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["environmentfileentity.development_local",{"_index":819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environmentfileentity.development_server",{"_index":820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environmentfileentity.production",{"_index":822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environmentfileentity.testing",{"_index":821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environmentmodule",{"_index":10,"title":{"modules/EnvironmentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EnvironmentModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["environmentoptions",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environments",{"_index":782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environmentvalidation",{"_index":498,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":440,"title":{},"body":{"classes/StateInvalidException.html":{},"miscellaneous/variables.html":{}}}],["error(\"method",{"_index":371,"title":{},"body":{"classes/RegisterUseCase.html":{}}}],["errorhttpstatuscode",{"_index":177,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":194,"title":{},"body":{"interfaces/CustomValidationInterface.html":{}}}],["es",{"_index":605,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["espírito",{"_index":606,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["event/event.options",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot(eventoptions",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermoduleoptions",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eventoptions",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exception/state",{"_index":426,"title":{},"body":{"classes/State.html":{}}}],["exceptionfactory",{"_index":178,"title":{},"body":{"interfaces/CustomValidationInterface.html":{}}}],["execute",{"_index":134,"title":{},"body":{"interfaces/BaseUseCase.html":{},"classes/RegisterUseCase.html":{}}}],["execute(...args",{"_index":135,"title":{},"body":{"interfaces/BaseUseCase.html":{},"classes/RegisterUseCase.html":{}}}],["expandvariables",{"_index":772,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"modules/CacheModule.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{}}}],["exports",{"_index":236,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{}}}],["express",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":171,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"modules/DatabaseModule.html":{},"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{}}}],["extraproviders",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factory.ts",{"_index":344,"title":{},"body":{"injectables/RedisOptionsFactory.html":{},"coverage.html":{}}}],["factory.ts:10",{"_index":347,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["factory.ts:13",{"_index":349,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["false",{"_index":301,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["federal",{"_index":604,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["file",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"modules/CacheModule.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{},"coverage.html":{}}}],["file.entity.ts",{"_index":577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["filename",{"_index":758,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileoptions",{"_index":517,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filetransportinstance",{"_index":764,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filetransportoptions",{"_index":756,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forbidnonwhitelisted",{"_index":179,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["forbidunknownvalues",{"_index":180,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":663,"title":{},"body":{"index.html":{}}}],["function",{"_index":191,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"injectables/RequestMiddleware.html":{},"coverage.html":{}}}],["functions",{"_index":651,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gerais",{"_index":619,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["getapphost",{"_index":80,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{}}}],["getappname",{"_index":81,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{}}}],["getappport",{"_index":82,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{}}}],["getcachehost",{"_index":142,"title":{},"body":{"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"classes/RedisEnvironment.html":{}}}],["getcachelogicaldatabase",{"_index":334,"title":{},"body":{"classes/RedisEnvironment.html":{}}}],["getcacheport",{"_index":143,"title":{},"body":{"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"classes/RedisEnvironment.html":{}}}],["getcachettl",{"_index":144,"title":{},"body":{"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"classes/RedisEnvironment.html":{}}}],["getdatabasehost",{"_index":202,"title":{},"body":{"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{}}}],["getdatabasename",{"_index":203,"title":{},"body":{"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{}}}],["getdatabasepassword",{"_index":204,"title":{},"body":{"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{}}}],["getdatabaseport",{"_index":205,"title":{},"body":{"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{}}}],["getdatabaseprotocol",{"_index":255,"title":{},"body":{"classes/MongooseEnvironment.html":{}}}],["getdatabasesynchronize",{"_index":329,"title":{},"body":{"classes/MysqlTypeOrmEnvironment.html":{}}}],["getdatabaseuser",{"_index":206,"title":{},"body":{"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{}}}],["getenvironment",{"_index":501,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getid",{"_index":122,"title":{},"body":{"classes/BaseEntity.html":{}}}],["getinitials",{"_index":422,"title":{},"body":{"classes/State.html":{}}}],["getname",{"_index":418,"title":{},"body":{"classes/State.html":{}}}],["getnodeenv",{"_index":83,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{}}}],["getting",{"_index":659,"title":{"index.html":{}},"body":{}}],["global",{"_index":227,"title":{},"body":{"modules/DatabaseModule.html":{},"miscellaneous/variables.html":{}}}],["go",{"_index":608,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["goiás",{"_index":609,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["grande",{"_index":635,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["graph",{"_index":715,"title":{},"body":{"modules.html":{}}}],["grosso",{"_index":614,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["groups",{"_index":181,"title":{},"body":{"interfaces/CustomValidationInterface.html":{}}}],["grow",{"_index":690,"title":{},"body":{"index.html":{}}}],["headers",{"_index":382,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["heartbeatfrequencyms",{"_index":842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["helmet",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["here",{"_index":701,"title":{},"body":{"index.html":{}}}],["host",{"_index":285,"title":{},"body":{"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["http/provider/http.provider",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["httpmodule",{"_index":35,"title":{},"body":{"modules/AppModule.html":{}}}],["httpmodule.registerasync(httpprovider",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["httpmoduleasyncoptions",{"_index":823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpmoduleoptions",{"_index":248,"title":{},"body":{"injectables/HttpOptions.html":{}}}],["httpmoduleoptionsfactory",{"_index":249,"title":{},"body":{"injectables/HttpOptions.html":{}}}],["httpoptions",{"_index":244,"title":{"injectables/HttpOptions.html":{}},"body":{"injectables/HttpOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpprovider",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":708,"title":{},"body":{"index.html":{}}}],["httpstatus.bad_request",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":119,"title":{},"body":{"classes/BaseEntity.html":{}}}],["id(id",{"_index":129,"title":{},"body":{"classes/BaseEntity.html":{}}}],["identifier",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["ignoreenvfile",{"_index":773,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignoreenvvars",{"_index":774,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignoreerrors",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implemented",{"_index":372,"title":{},"body":{"classes/RegisterUseCase.html":{}}}],["implements",{"_index":98,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"injectables/CacheEnvironment.html":{},"injectables/DatabaseEnvironment.html":{},"injectables/HttpOptions.html":{},"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{}}}],["import",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"injectables/CacheEnvironment.html":{},"modules/CacheModule.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"injectables/SwaggerOptions.html":{}}}],["imports",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":79,"title":{"index.html":{}},"body":{"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":458,"title":{},"body":{"injectables/SwaggerOptions.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"modules/CacheModule.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{}}}],["inherited",{"_index":197,"title":{},"body":{"classes/CustomerEntity.html":{},"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"classes/State.html":{}}}],["init",{"_index":654,"title":{},"body":{"miscellaneous/functions.html":{}}}],["initials",{"_index":411,"title":{},"body":{"classes/State.html":{}}}],["inject",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":75,"title":{"injectables/ApplicationEnvironment.html":{},"injectables/CacheEnvironment.html":{},"injectables/DatabaseEnvironment.html":{},"injectables/HttpOptions.html":{},"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"injectables/RequestMiddleware.html":{},"injectables/SwaggerOptions.html":{}},"body":{"injectables/ApplicationEnvironment.html":{},"injectables/CacheEnvironment.html":{},"injectables/DatabaseEnvironment.html":{},"injectables/HttpOptions.html":{},"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"injectables/RequestMiddleware.html":{},"injectables/SwaggerOptions.html":{},"coverage.html":{}}}],["injectables",{"_index":77,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"injectables/CacheEnvironment.html":{},"injectables/DatabaseEnvironment.html":{},"injectables/HttpOptions.html":{},"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"injectables/RequestMiddleware.html":{},"injectables/SwaggerOptions.html":{},"overview.html":{}}}],["insecureauth",{"_index":311,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["installation",{"_index":673,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":675,"title":{},"body":{"index.html":{}}}],["instance",{"_index":656,"title":{},"body":{"miscellaneous/functions.html":{}}}],["interface",{"_index":130,"title":{"interfaces/BaseUseCase.html":{},"interfaces/CacheInterface.html":{},"interfaces/CustomValidationInterface.html":{}},"body":{"interfaces/BaseUseCase.html":{},"interfaces/CacheInterface.html":{},"interfaces/CustomValidationInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":132,"title":{},"body":{"interfaces/BaseUseCase.html":{},"interfaces/CacheInterface.html":{},"interfaces/CustomValidationInterface.html":{},"overview.html":{}}}],["invalid",{"_index":448,"title":{},"body":{"classes/StateInvalidException.html":{}}}],["invalid.exception",{"_index":427,"title":{},"body":{"classes/State.html":{}}}],["invalid.exception.ts",{"_index":439,"title":{},"body":{"classes/StateInvalidException.html":{},"coverage.html":{}}}],["invalid.exception.ts:2",{"_index":446,"title":{},"body":{"classes/StateInvalidException.html":{}}}],["invalid.exception.ts:3",{"_index":445,"title":{},"body":{"classes/StateInvalidException.html":{}}}],["invalid.exception.ts:4",{"_index":444,"title":{},"body":{"classes/StateInvalidException.html":{}}}],["is_production",{"_index":267,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["isenabledebugmessages",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isglobal",{"_index":361,"title":{},"body":{"injectables/RedisOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["isproduction",{"_index":825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isvalid",{"_index":430,"title":{},"body":{"classes/State.html":{}}}],["janeiro",{"_index":633,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["joi",{"_index":556,"title":{},"body":{"dependencies.html":{}}}],["joi.boolean",{"_index":803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().port",{"_index":798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().port().required",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.number().required",{"_index":794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object",{"_index":783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.objectschema",{"_index":778,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string",{"_index":805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().valid(...environments",{"_index":785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["join",{"_index":697,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":705,"title":{},"body":{"index.html":{}}}],["keepalive",{"_index":843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keepaliveinitialdelay",{"_index":844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":711,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":687,"title":{},"body":{"index.html":{}}}],["limit",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":775,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":322,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["log/winston.options",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["logconsole",{"_index":518,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logfile",{"_index":519,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger",{"_index":374,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["logger(requestmiddleware.name",{"_index":391,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["loggerlevel",{"_index":845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":312,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["logs",{"_index":755,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ma",{"_index":610,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["manager",{"_index":353,"title":{},"body":{"injectables/RedisOptionsFactory.html":{},"dependencies.html":{}}}],["maranhão",{"_index":611,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["matching",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"modules/CacheModule.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["mato",{"_index":613,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["max",{"_index":362,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["maxlisteners",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxpoolsize",{"_index":847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maxredirects",{"_index":250,"title":{},"body":{"injectables/HttpOptions.html":{}}}],["message",{"_index":441,"title":{},"body":{"classes/StateInvalidException.html":{}}}],["metadata",{"_index":563,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"injectables/SwaggerOptions.html":{}}}],["mg",{"_index":617,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["middlewareconsumer",{"_index":24,"title":{},"body":{"modules/AppModule.html":{}}}],["middlewares",{"_index":655,"title":{},"body":{"miscellaneous/functions.html":{}}}],["minas",{"_index":618,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["minpoolsize",{"_index":846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":572,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":686,"title":{},"body":{"index.html":{}}}],["mode",{"_index":383,"title":{},"body":{"injectables/RequestMiddleware.html":{},"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{},"modules.html":{},"overview.html":{}}}],["mongodb",{"_index":833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoose",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["mongooseenvironment",{"_index":240,"title":{"classes/MongooseEnvironment.html":{}},"body":{"modules/EnvironmentModule.html":{},"classes/MongooseEnvironment.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":228,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoosemodule.forrootasync(mongooseprovider",{"_index":235,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["mongoosemoduleasyncoptions",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongooseoptions",{"_index":491,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mongooseprovider",{"_index":233,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["more",{"_index":700,"title":{},"body":{"index.html":{}}}],["ms",{"_index":615,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["mt",{"_index":612,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["multiplestatements",{"_index":313,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["music",{"_index":759,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mysql",{"_index":284,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["mysql2",{"_index":307,"title":{},"body":{"injectables/MysqlOptions.html":{},"dependencies.html":{}}}],["mysqlenvironment",{"_index":271,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["mysqloptions",{"_index":264,"title":{"injectables/MysqlOptions.html":{}},"body":{"injectables/MysqlOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mysqlprovider",{"_index":508,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mysqlrawenvironment",{"_index":323,"title":{"classes/MysqlRawEnvironment.html":{}},"body":{"classes/MysqlRawEnvironment.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mysqlrawoptions",{"_index":495,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["mysqltypeormenvironment",{"_index":326,"title":{"classes/MysqlTypeOrmEnvironment.html":{}},"body":{"classes/MysqlTypeOrmEnvironment.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mysqltypeormmoduleoptions",{"_index":510,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":706,"title":{},"body":{"index.html":{}}}],["name",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"injectables/DatabaseEnvironment.html":{},"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{},"miscellaneous/functions.html":{}}}],["name(name",{"_index":437,"title":{},"body":{"classes/State.html":{}}}],["nameisvalid",{"_index":410,"title":{},"body":{"classes/State.html":{}}}],["nameisvalid(name",{"_index":416,"title":{},"body":{"classes/State.html":{}}}],["nest",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["nestframework",{"_index":710,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpOptions.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"injectables/CacheEnvironment.html":{},"modules/CacheModule.html":{},"interfaces/CustomValidationInterface.html":{},"injectables/DatabaseEnvironment.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{},"injectables/HttpOptions.html":{},"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"injectables/RequestMiddleware.html":{},"injectables/SwaggerOptions.html":{},"dependencies.html":{}}}],["nestjs/common/cache/cache.module",{"_index":231,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["nestjs/config",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"injectables/CacheEnvironment.html":{},"injectables/DatabaseEnvironment.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["nestjs/event",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":229,"title":{},"body":{"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":464,"title":{},"body":{"injectables/SwaggerOptions.html":{},"dependencies.html":{}}}],["nestjs/throttler",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":277,"title":{},"body":{"injectables/MysqlOptions.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":393,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["nesttables",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":370,"title":{},"body":{"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"injectables/SwaggerOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newlistener",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next",{"_index":388,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["node.js",{"_index":662,"title":{},"body":{"index.html":{}}}],["node_env",{"_index":784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["norte",{"_index":636,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["npm",{"_index":674,"title":{},"body":{"index.html":{}}}],["null",{"_index":126,"title":{},"body":{"classes/BaseEntity.html":{},"classes/StateInvalidException.html":{}}}],["number",{"_index":92,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"classes/State.html":{}}}],["o",{"_index":395,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["object",{"_index":767,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(stateenum).includes(name",{"_index":436,"title":{},"body":{"classes/State.html":{}}}],["omit",{"_index":465,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["open",{"_index":688,"title":{},"body":{"index.html":{}}}],["openapiobject",{"_index":462,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["optional",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":343,"title":{},"body":{"injectables/RedisOptionsFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"modules/EnvironmentModule.html":{},"overview.html":{}}}],["overview",{"_index":717,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pa",{"_index":620,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["package",{"_index":534,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["par",{"_index":621,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["parameters",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"injectables/DatabaseEnvironment.html":{},"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{},"miscellaneous/functions.html":{}}}],["paran",{"_index":625,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["paraíba",{"_index":623,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["parser",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["pass",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["password",{"_index":291,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["path.join(__dirname",{"_index":754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paulo",{"_index":647,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pb",{"_index":622,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pe",{"_index":626,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pernambuco",{"_index":627,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pi",{"_index":628,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["piau",{"_index":629,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pipetransform",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":698,"title":{},"body":{"index.html":{}}}],["poolsize",{"_index":314,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["port",{"_index":287,"title":{},"body":{"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["pr",{"_index":624,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prettyprint",{"_index":751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":116,"title":{},"body":{"classes/BaseEntity.html":{},"classes/CustomerEntity.html":{},"injectables/MysqlOptions.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{}}}],["pro",{"_index":473,"title":{},"body":{"injectables/SwaggerOptions.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":582,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":661,"title":{},"body":{"index.html":{}}}],["project",{"_index":689,"title":{},"body":{"index.html":{}}}],["promise",{"_index":138,"title":{},"body":{"interfaces/BaseUseCase.html":{},"injectables/HttpOptions.html":{},"classes/RegisterUseCase.html":{}}}],["properties",{"_index":115,"title":{"properties.html":{}},"body":{"classes/BaseEntity.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/MysqlOptions.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"properties.html":{}}}],["protocol",{"_index":827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protocol}://${host",{"_index":832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provide",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provider/mongoose.provider",{"_index":234,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["provider/redis.provider",{"_index":167,"title":{},"body":{"modules/CacheModule.html":{}}}],["providers",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"modules/CacheModule.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{}}}],["queuelimit",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["raw.environment.ts",{"_index":325,"title":{},"body":{"classes/MysqlRawEnvironment.html":{},"coverage.html":{}}}],["raw.options.ts",{"_index":494,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["raw.provider.ts",{"_index":507,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":699,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":154,"title":{},"body":{"injectables/CacheEnvironment.html":{},"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"injectables/RequestMiddleware.html":{},"injectables/SwaggerOptions.html":{}}}],["redis",{"_index":165,"title":{},"body":{"modules/CacheModule.html":{},"injectables/RedisOptionsFactory.html":{},"dependencies.html":{}}}],["redisenvironment",{"_index":332,"title":{"classes/RedisEnvironment.html":{}},"body":{"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["redismoduleoptions",{"_index":166,"title":{},"body":{"modules/CacheModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["redisoptionsfactory",{"_index":341,"title":{"injectables/RedisOptionsFactory.html":{}},"body":{"injectables/RedisOptionsFactory.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["redisstore",{"_index":352,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["reflect",{"_index":562,"title":{},"body":{"dependencies.html":{}}}],["registerusecase",{"_index":364,"title":{"classes/RegisterUseCase.html":{}},"body":{"classes/RegisterUseCase.html":{},"coverage.html":{}}}],["removelistener",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repository",{"_index":672,"title":{},"body":{"index.html":{}}}],["request",{"_index":378,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["request.body",{"_index":400,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["request.cache",{"_index":402,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["request.credentials",{"_index":404,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["request.destination",{"_index":405,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["request.headers",{"_index":401,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["request.method",{"_index":398,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["request.mode",{"_index":403,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["request.url",{"_index":399,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["requestformat",{"_index":375,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["requestformat(request",{"_index":377,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["requestmiddleware",{"_index":50,"title":{"injectables/RequestMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/RequestMiddleware.html":{},"coverage.html":{}}}],["requestmiddleware.name",{"_index":397,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["reset",{"_index":13,"title":{},"body":{"modules/AppModule.html":{},"modules/EnvironmentModule.html":{},"overview.html":{}}}],["response",{"_index":387,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["results",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"modules/CacheModule.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retryattempts",{"_index":316,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["retrydelay",{"_index":317,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["return",{"_index":100,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"classes/BaseEntity.html":{},"injectables/CacheEnvironment.html":{},"injectables/DatabaseEnvironment.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"injectables/SwaggerOptions.html":{}}}],["rimraf",{"_index":565,"title":{},"body":{"dependencies.html":{}}}],["rio",{"_index":631,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rj",{"_index":630,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rn",{"_index":634,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["ro",{"_index":638,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rondônia",{"_index":639,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["roraima",{"_index":641,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["route",{"_index":380,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["rowsasarray",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rr",{"_index":640,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["rs",{"_index":637,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["run",{"_index":676,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":567,"title":{},"body":{"dependencies.html":{}}}],["santa",{"_index":643,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["santo",{"_index":607,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sc",{"_index":642,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["scalable",{"_index":666,"title":{},"body":{"index.html":{}}}],["se",{"_index":648,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["security/ddos/throttler.options",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["sergipe",{"_index":649,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["server",{"_index":667,"title":{},"body":{"index.html":{}}}],["set",{"_index":128,"title":{},"body":{"classes/BaseEntity.html":{},"classes/State.html":{}}}],["setdescription('the",{"_index":467,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["setid(id",{"_index":124,"title":{},"body":{"classes/BaseEntity.html":{}}}],["setname(name",{"_index":420,"title":{},"body":{"classes/State.html":{}}}],["settitle(this.applicationservice.getappname",{"_index":466,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["setup",{"_index":453,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["setup(app",{"_index":457,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["setupmiddlewares",{"_index":530,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupmiddlewares(app",{"_index":653,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setversion('1.0",{"_index":471,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["side",{"_index":668,"title":{},"body":{"index.html":{}}}],["skipmissingproperties",{"_index":182,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["skipnullproperties",{"_index":183,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["skipundefinedproperties",{"_index":184,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["sockettimeoutms",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"modules/CacheModule.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"modules/DatabaseModule.html":{},"modules/EnvironmentModule.html":{},"injectables/HttpOptions.html":{},"classes/MongooseEnvironment.html":{},"injectables/MysqlOptions.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{},"index.html":{}}}],["sp",{"_index":645,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sponsors",{"_index":692,"title":{},"body":{"index.html":{}}}],["src/.../database.module",{"_index":726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment",{"_index":576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.entity.ts",{"_index":574,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.options.ts",{"_index":728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.validation.ts",{"_index":729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../event.options.ts",{"_index":730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../get",{"_index":731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../http.provider.ts",{"_index":732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":652,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mongoose.options.ts",{"_index":733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mongoose.provider.ts",{"_index":734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mysql",{"_index":735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mysql.provider.ts",{"_index":736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../redis.provider.ts",{"_index":737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../state.enum.ts",{"_index":578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../throttler.options.ts",{"_index":738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validation.options.ts",{"_index":739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../versioning.options.ts",{"_index":740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../winston.options.ts",{"_index":727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/domain/entity/base.entity.ts",{"_index":114,"title":{},"body":{"classes/BaseEntity.html":{},"coverage.html":{}}}],["src/domain/entity/base.entity.ts:12",{"_index":125,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/domain/entity/base.entity.ts:2",{"_index":121,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/domain/entity/base.entity.ts:8",{"_index":123,"title":{},"body":{"classes/BaseEntity.html":{}}}],["src/domain/entity/customer/address/state.entity.ts",{"_index":407,"title":{},"body":{"classes/State.html":{},"coverage.html":{}}}],["src/domain/entity/customer/address/state.entity.ts:19",{"_index":417,"title":{},"body":{"classes/State.html":{}}}],["src/domain/entity/customer/address/state.entity.ts:23",{"_index":419,"title":{},"body":{"classes/State.html":{}}}],["src/domain/entity/customer/address/state.entity.ts:27",{"_index":421,"title":{},"body":{"classes/State.html":{}}}],["src/domain/entity/customer/address/state.entity.ts:35",{"_index":423,"title":{},"body":{"classes/State.html":{}}}],["src/domain/entity/customer/address/state.entity.ts:6",{"_index":415,"title":{},"body":{"classes/State.html":{}}}],["src/domain/entity/customer/address/state.entity.ts:7",{"_index":414,"title":{},"body":{"classes/State.html":{}}}],["src/domain/entity/customer/address/state.enum.ts",{"_index":590,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/domain/entity/customer/customer.entity",{"_index":367,"title":{},"body":{"classes/RegisterUseCase.html":{}}}],["src/domain/entity/customer/customer.entity.ts",{"_index":196,"title":{},"body":{"classes/CustomerEntity.html":{},"coverage.html":{}}}],["src/domain/entity/exception/state",{"_index":438,"title":{},"body":{"classes/StateInvalidException.html":{},"coverage.html":{}}}],["src/domain/usecase/base.usecase.ts",{"_index":133,"title":{},"body":{"interfaces/BaseUseCase.html":{},"coverage.html":{}}}],["src/domain/usecase/base.usecase.ts:2",{"_index":136,"title":{},"body":{"interfaces/BaseUseCase.html":{}}}],["src/domain/usecase/customer/register.usecase.ts",{"_index":365,"title":{},"body":{"classes/RegisterUseCase.html":{},"coverage.html":{}}}],["src/domain/usecase/customer/register.usecase.ts:5",{"_index":366,"title":{},"body":{"classes/RegisterUseCase.html":{}}}],["src/infrastructure/configuration/cache/base/environment/cache.environment.ts",{"_index":141,"title":{},"body":{"injectables/CacheEnvironment.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/cache/base/environment/cache.environment.ts:13",{"_index":149,"title":{},"body":{"injectables/CacheEnvironment.html":{}}}],["src/infrastructure/configuration/cache/base/environment/cache.environment.ts:17",{"_index":150,"title":{},"body":{"injectables/CacheEnvironment.html":{}}}],["src/infrastructure/configuration/cache/base/environment/cache.environment.ts:6",{"_index":146,"title":{},"body":{"injectables/CacheEnvironment.html":{}}}],["src/infrastructure/configuration/cache/base/environment/cache.environment.ts:9",{"_index":148,"title":{},"body":{"injectables/CacheEnvironment.html":{}}}],["src/infrastructure/configuration/cache/base/environment/cache.interface.ts",{"_index":158,"title":{},"body":{"interfaces/CacheInterface.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/cache/base/environment/cache.interface.ts:2",{"_index":159,"title":{},"body":{"interfaces/CacheInterface.html":{}}}],["src/infrastructure/configuration/cache/base/environment/cache.interface.ts:3",{"_index":160,"title":{},"body":{"interfaces/CacheInterface.html":{}}}],["src/infrastructure/configuration/cache/base/environment/cache.interface.ts:4",{"_index":161,"title":{},"body":{"interfaces/CacheInterface.html":{}}}],["src/infrastructure/configuration/cache/redis/environment/redis.environment.ts",{"_index":333,"title":{},"body":{"classes/RedisEnvironment.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/cache/redis/environment/redis.environment.ts:4",{"_index":335,"title":{},"body":{"classes/RedisEnvironment.html":{}}}],["src/infrastructure/configuration/cache/redis/redis",{"_index":342,"title":{},"body":{"injectables/RedisOptionsFactory.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/database/base/environment/database.environment.ts",{"_index":201,"title":{},"body":{"injectables/DatabaseEnvironment.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/database/base/environment/database.environment.ts:13",{"_index":211,"title":{},"body":{"injectables/DatabaseEnvironment.html":{}}}],["src/infrastructure/configuration/database/base/environment/database.environment.ts:17",{"_index":212,"title":{},"body":{"injectables/DatabaseEnvironment.html":{}}}],["src/infrastructure/configuration/database/base/environment/database.environment.ts:21",{"_index":210,"title":{},"body":{"injectables/DatabaseEnvironment.html":{}}}],["src/infrastructure/configuration/database/base/environment/database.environment.ts:25",{"_index":209,"title":{},"body":{"injectables/DatabaseEnvironment.html":{}}}],["src/infrastructure/configuration/database/base/environment/database.environment.ts:6",{"_index":207,"title":{},"body":{"injectables/DatabaseEnvironment.html":{}}}],["src/infrastructure/configuration/database/base/environment/database.environment.ts:9",{"_index":208,"title":{},"body":{"injectables/DatabaseEnvironment.html":{}}}],["src/infrastructure/configuration/database/base/environment/database.interface.ts",{"_index":220,"title":{},"body":{"classes/DatabaseInterface.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/database/base/environment/database.interface.ts:2",{"_index":221,"title":{},"body":{"classes/DatabaseInterface.html":{}}}],["src/infrastructure/configuration/database/base/environment/database.interface.ts:3",{"_index":224,"title":{},"body":{"classes/DatabaseInterface.html":{}}}],["src/infrastructure/configuration/database/base/environment/database.interface.ts:4",{"_index":225,"title":{},"body":{"classes/DatabaseInterface.html":{}}}],["src/infrastructure/configuration/database/base/environment/database.interface.ts:5",{"_index":223,"title":{},"body":{"classes/DatabaseInterface.html":{}}}],["src/infrastructure/configuration/database/base/environment/database.interface.ts:6",{"_index":222,"title":{},"body":{"classes/DatabaseInterface.html":{}}}],["src/infrastructure/configuration/database/mongo/environment/mongoose.environment.ts",{"_index":254,"title":{},"body":{"classes/MongooseEnvironment.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/database/mongo/environment/mongoose.environment.ts:4",{"_index":256,"title":{},"body":{"classes/MongooseEnvironment.html":{}}}],["src/infrastructure/configuration/database/mongo/mongoose.options.ts",{"_index":489,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/database/mysql/environment/mysql",{"_index":324,"title":{},"body":{"classes/MysqlRawEnvironment.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/database/mysql/mysql",{"_index":493,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/database/typeorm/environment/mysql",{"_index":327,"title":{},"body":{"classes/MysqlTypeOrmEnvironment.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/database/typeorm/mysql",{"_index":265,"title":{},"body":{"injectables/MysqlOptions.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/environment/base/application.environment.ts",{"_index":78,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/environment/base/application.environment.ts:10",{"_index":90,"title":{},"body":{"injectables/ApplicationEnvironment.html":{}}}],["src/infrastructure/configuration/environment/base/application.environment.ts:14",{"_index":88,"title":{},"body":{"injectables/ApplicationEnvironment.html":{}}}],["src/infrastructure/configuration/environment/base/application.environment.ts:18",{"_index":91,"title":{},"body":{"injectables/ApplicationEnvironment.html":{}}}],["src/infrastructure/configuration/environment/base/application.environment.ts:22",{"_index":93,"title":{},"body":{"injectables/ApplicationEnvironment.html":{}}}],["src/infrastructure/configuration/environment/base/application.environment.ts:7",{"_index":87,"title":{},"body":{"injectables/ApplicationEnvironment.html":{}}}],["src/infrastructure/configuration/environment/base/application.interface.ts",{"_index":107,"title":{},"body":{"classes/ApplicationInterface.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/environment/base/application.interface.ts:4",{"_index":110,"title":{},"body":{"classes/ApplicationInterface.html":{}}}],["src/infrastructure/configuration/environment/base/application.interface.ts:5",{"_index":109,"title":{},"body":{"classes/ApplicationInterface.html":{}}}],["src/infrastructure/configuration/environment/base/application.interface.ts:6",{"_index":111,"title":{},"body":{"classes/ApplicationInterface.html":{}}}],["src/infrastructure/configuration/environment/base/application.interface.ts:7",{"_index":112,"title":{},"body":{"classes/ApplicationInterface.html":{}}}],["src/infrastructure/configuration/environment/entity/environment",{"_index":583,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/infrastructure/configuration/environment/entity/environment.entity.ts",{"_index":579,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/infrastructure/configuration/environment/environment.options.ts",{"_index":496,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/environment/helper/environment.validation.ts",{"_index":497,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/environment/helper/get",{"_index":499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/event/event.options.ts",{"_index":502,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/http/http.options.ts",{"_index":245,"title":{},"body":{"injectables/HttpOptions.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/http/http.options.ts:6",{"_index":247,"title":{},"body":{"injectables/HttpOptions.html":{}}}],["src/infrastructure/configuration/http/provider/http.provider.ts",{"_index":503,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/ioc/app.module.ts",{"_index":18,"title":{},"body":{"modules/AppModule.html":{}}}],["src/infrastructure/configuration/ioc/app.module.ts:33",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["src/infrastructure/configuration/ioc/cache/cache.module.ts",{"_index":162,"title":{},"body":{"modules/CacheModule.html":{}}}],["src/infrastructure/configuration/ioc/cache/provider/redis.provider.ts",{"_index":504,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/ioc/database/database.module.ts",{"_index":226,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/infrastructure/configuration/ioc/database/provider/mongoose.provider.ts",{"_index":505,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/ioc/database/provider/mysql",{"_index":506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/ioc/database/provider/mysql.provider.ts",{"_index":509,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/ioc/database/settings/database.module",{"_index":511,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/ioc/environment.module.ts",{"_index":241,"title":{},"body":{"modules/EnvironmentModule.html":{}}}],["src/infrastructure/configuration/log/winston.options.ts",{"_index":514,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/security/ddos/throttler.options.ts",{"_index":520,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/swagger/swagger.options.ts",{"_index":452,"title":{},"body":{"injectables/SwaggerOptions.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/swagger/swagger.options.ts:6",{"_index":455,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["src/infrastructure/configuration/swagger/swagger.options.ts:9",{"_index":459,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["src/infrastructure/configuration/validation/interface/validation.interface.ts",{"_index":170,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"coverage.html":{}}}],["src/infrastructure/configuration/validation/validation.options.ts",{"_index":522,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/configuration/versioning/versioning.options.ts",{"_index":524,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/infrastructure/core/middleware/request.middleware.ts",{"_index":373,"title":{},"body":{"injectables/RequestMiddleware.html":{},"coverage.html":{}}}],["src/infrastructure/core/middleware/request.middleware.ts:17",{"_index":379,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["src/infrastructure/core/middleware/request.middleware.ts:5",{"_index":392,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["src/infrastructure/core/middleware/request.middleware.ts:7",{"_index":389,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["src/main.ts",{"_index":526,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["stack",{"_index":442,"title":{},"body":{"classes/StateInvalidException.html":{}}}],["start",{"_index":531,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["start(app",{"_index":657,"title":{},"body":{"miscellaneous/functions.html":{}}}],["start:dev",{"_index":678,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":679,"title":{},"body":{"index.html":{}}}],["started",{"_index":660,"title":{"index.html":{}},"body":{}}],["starter",{"_index":671,"title":{},"body":{"index.html":{}}}],["state",{"_index":406,"title":{"classes/State.html":{}},"body":{"classes/State.html":{},"classes/StateInvalidException.html":{},"coverage.html":{}}}],["state.enum",{"_index":424,"title":{},"body":{"classes/State.html":{}}}],["stateenum",{"_index":413,"title":{},"body":{"classes/State.html":{},"miscellaneous/enumerations.html":{}}}],["stateenum[name",{"_index":435,"title":{},"body":{"classes/State.html":{}}}],["stateinvalidexception",{"_index":425,"title":{"classes/StateInvalidException.html":{}},"body":{"classes/State.html":{},"classes/StateInvalidException.html":{},"coverage.html":{}}}],["stateinvalidexception(name",{"_index":432,"title":{},"body":{"classes/State.html":{}}}],["stateinvalidexception.name",{"_index":450,"title":{},"body":{"classes/StateInvalidException.html":{}}}],["statements",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":702,"title":{},"body":{"index.html":{}}}],["stopatfirsterror",{"_index":185,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":354,"title":{},"body":{"injectables/RedisOptionsFactory.html":{},"dependencies.html":{}}}],["strictgroups",{"_index":186,"title":{},"body":{"interfaces/CustomValidationInterface.html":{}}}],["string",{"_index":89,"title":{},"body":{"injectables/ApplicationEnvironment.html":{},"classes/ApplicationInterface.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CacheInterface.html":{},"interfaces/CustomValidationInterface.html":{},"injectables/DatabaseEnvironment.html":{},"classes/DatabaseInterface.html":{},"classes/MongooseEnvironment.html":{},"classes/MysqlRawEnvironment.html":{},"classes/MysqlTypeOrmEnvironment.html":{},"classes/RedisEnvironment.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"miscellaneous/variables.html":{}}}],["stringifyobjects",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sul",{"_index":616,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["super",{"_index":428,"title":{},"body":{"classes/State.html":{}}}],["super(`this",{"_index":447,"title":{},"body":{"classes/StateInvalidException.html":{}}}],["support",{"_index":693,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supportbignumbers",{"_index":319,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":713,"title":{},"body":{"modules.html":{}}}],["swagger/swagger.options",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["swaggermodule",{"_index":463,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["swaggermodule.createdocument(app",{"_index":476,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["swaggermodule.setup('api",{"_index":477,"title":{},"body":{"injectables/SwaggerOptions.html":{}}}],["swaggeroptions",{"_index":11,"title":{"injectables/SwaggerOptions.html":{}},"body":{"modules/AppModule.html":{},"injectables/SwaggerOptions.html":{},"coverage.html":{},"overview.html":{}}}],["switch",{"_index":817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":295,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["são",{"_index":646,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["table",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":532,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template.log",{"_index":760,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tentity",{"_index":139,"title":{},"body":{"interfaces/BaseUseCase.html":{}}}],["test",{"_index":682,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":685,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":684,"title":{},"body":{"index.html":{}}}],["testing",{"_index":581,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":681,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":691,"title":{},"body":{"index.html":{}}}],["this._id",{"_index":127,"title":{},"body":{"classes/BaseEntity.html":{}}}],["this._initials",{"_index":434,"title":{},"body":{"classes/State.html":{}}}],["this._name",{"_index":433,"title":{},"body":{"classes/State.html":{}}}],["this.applicationconfig.getnodeenv",{"_index":282,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["this.cacheconfig.getcachehost",{"_index":356,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["this.cacheconfig.getcachelogicaldatabase",{"_index":358,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["this.cacheconfig.getcacheport",{"_index":357,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["this.cacheconfig.getcachettl",{"_index":360,"title":{},"body":{"injectables/RedisOptionsFactory.html":{}}}],["this.config.get('cache_host",{"_index":155,"title":{},"body":{"injectables/CacheEnvironment.html":{}}}],["this.config.get('cache_logical_database",{"_index":340,"title":{},"body":{"classes/RedisEnvironment.html":{}}}],["this.config.get('cache_port",{"_index":156,"title":{},"body":{"injectables/CacheEnvironment.html":{}}}],["this.config.get('cache_ttl",{"_index":157,"title":{},"body":{"injectables/CacheEnvironment.html":{}}}],["this.configservice.get('app_host",{"_index":102,"title":{},"body":{"injectables/ApplicationEnvironment.html":{}}}],["this.configservice.get('app_name",{"_index":101,"title":{},"body":{"injectables/ApplicationEnvironment.html":{}}}],["this.configservice.get('app_port",{"_index":103,"title":{},"body":{"injectables/ApplicationEnvironment.html":{}}}],["this.configservice.get('database_host",{"_index":215,"title":{},"body":{"injectables/DatabaseEnvironment.html":{}}}],["this.configservice.get('database_name",{"_index":219,"title":{},"body":{"injectables/DatabaseEnvironment.html":{}}}],["this.configservice.get('database_password",{"_index":218,"title":{},"body":{"injectables/DatabaseEnvironment.html":{}}}],["this.configservice.get('database_port",{"_index":216,"title":{},"body":{"injectables/DatabaseEnvironment.html":{}}}],["this.configservice.get('database_protocol",{"_index":263,"title":{},"body":{"classes/MongooseEnvironment.html":{}}}],["this.configservice.get('database_synchronize",{"_index":331,"title":{},"body":{"classes/MysqlTypeOrmEnvironment.html":{}}}],["this.configservice.get('database_user",{"_index":217,"title":{},"body":{"injectables/DatabaseEnvironment.html":{}}}],["this.configservice.get('node_env",{"_index":104,"title":{},"body":{"injectables/ApplicationEnvironment.html":{}}}],["this.databaseconfig.getdatabasehost",{"_index":286,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["this.databaseconfig.getdatabasename",{"_index":294,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["this.databaseconfig.getdatabasepassword",{"_index":292,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["this.databaseconfig.getdatabaseport",{"_index":288,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["this.databaseconfig.getdatabasesynchronize",{"_index":296,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["this.databaseconfig.getdatabaseuser",{"_index":290,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["this.is_production",{"_index":281,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["this.logger.debug",{"_index":394,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["this.name",{"_index":449,"title":{},"body":{"classes/StateInvalidException.html":{}}}],["this.nameisvalid(name",{"_index":431,"title":{},"body":{"classes/State.html":{}}}],["this.requestformat(request",{"_index":396,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["this.stack",{"_index":451,"title":{},"body":{"classes/StateInvalidException.html":{}}}],["throttlermodule",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermodule.forroot(throttleroptions",{"_index":67,"title":{},"body":{"modules/AppModule.html":{}}}],["throttlermoduleoptions",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["throttleroptions",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["throw",{"_index":369,"title":{},"body":{"classes/RegisterUseCase.html":{},"classes/State.html":{}}}],["timeout",{"_index":252,"title":{},"body":{"injectables/HttpOptions.html":{}}}],["timezone",{"_index":321,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["tocantins",{"_index":650,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["touch",{"_index":703,"title":{},"body":{"index.html":{}}}],["trace",{"_index":320,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["transports",{"_index":766,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transports.file(fileoptions",{"_index":765,"title":{},"body":{"miscellaneous/variables.html":{}}}],["true",{"_index":298,"title":{},"body":{"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["ttl",{"_index":359,"title":{},"body":{"injectables/RedisOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":709,"title":{},"body":{"index.html":{}}}],["type",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"injectables/ApplicationEnvironment.html":{},"classes/BaseEntity.html":{},"interfaces/BaseUseCase.html":{},"injectables/CacheEnvironment.html":{},"interfaces/CustomValidationInterface.html":{},"classes/CustomerEntity.html":{},"injectables/DatabaseEnvironment.html":{},"injectables/MysqlOptions.html":{},"injectables/RedisOptionsFactory.html":{},"classes/RegisterUseCase.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"classes/StateInvalidException.html":{},"injectables/SwaggerOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typecast",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeorm",{"_index":569,"title":{},"body":{"dependencies.html":{}}}],["typeorm.environment",{"_index":280,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["typeorm.environment.ts",{"_index":328,"title":{},"body":{"classes/MysqlTypeOrmEnvironment.html":{},"coverage.html":{}}}],["typeorm.environment.ts:4",{"_index":330,"title":{},"body":{"classes/MysqlTypeOrmEnvironment.html":{}}}],["typeorm.options.ts",{"_index":266,"title":{},"body":{"injectables/MysqlOptions.html":{},"coverage.html":{}}}],["typeorm.options.ts:19",{"_index":274,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["typeorm.options.ts:9",{"_index":272,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["typeormmoduleasyncoptions",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeormmoduleoptions",{"_index":275,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["typeormoptionsfactory",{"_index":276,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["typescript",{"_index":670,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":776,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":680,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":724,"title":{},"body":{"properties.html":{}}}],["uri",{"_index":831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use",{"_index":376,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["use(request",{"_index":386,"title":{},"body":{"injectables/RequestMiddleware.html":{}}}],["useclass",{"_index":824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usefactory",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["username",{"_index":289,"title":{},"body":{"injectables/MysqlOptions.html":{}}}],["utf8",{"_index":770,"title":{},"body":{"miscellaneous/variables.html":{}}}],["utf8_general_ci",{"_index":303,"title":{},"body":{"injectables/MysqlOptions.html":{},"miscellaneous/variables.html":{}}}],["utilities.format.nestlike('music",{"_index":749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["v",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationerror",{"_index":192,"title":{},"body":{"interfaces/CustomValidationInterface.html":{}}}],["validationerror.target",{"_index":187,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["validationerror.value",{"_index":188,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["validationglobalpipe",{"_index":523,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationpipe(options",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validationschema",{"_index":777,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":193,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"dependencies.html":{}}}],["validatoroptions",{"_index":172,"title":{},"body":{"interfaces/CustomValidationInterface.html":{}}}],["value",{"_index":390,"title":{},"body":{"injectables/RequestMiddleware.html":{},"classes/StateInvalidException.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":725,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbosememoryleak",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":722,"title":{},"body":{"properties.html":{}}}],["versioningoptions",{"_index":525,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["versioningtype.uri",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"classes/BaseEntity.html":{},"injectables/RequestMiddleware.html":{},"classes/State.html":{},"injectables/SwaggerOptions.html":{}}}],["waitforconnections",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":677,"title":{},"body":{"index.html":{}}}],["website",{"_index":707,"title":{},"body":{"index.html":{}}}],["whitelist",{"_index":189,"title":{},"body":{"interfaces/CustomValidationInterface.html":{},"miscellaneous/variables.html":{}}}],["wildcard",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["winston.format.combine",{"_index":744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.errors",{"_index":748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.logstash",{"_index":761,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.ms",{"_index":746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.splat",{"_index":747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winston.format.timestamp",{"_index":745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["winstonconfig",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["winstonmodule",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["winstonmodule.forroot(winstonconfig",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["you'd",{"_index":696,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"modules/EnvironmentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nCacheModule\n\nCacheModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCacheModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nEnvironmentModule\n\nEnvironmentModule\n\nAppModule -->\n\nEnvironmentModule->AppModule\n\n\n\n\n\nSwaggerOptions\n\nSwaggerOptions\n\nAppModule -->\n\nSwaggerOptions->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/configuration/ioc/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SwaggerOptions\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CacheModule\n                        \n                        \n                            DatabaseModule\n                        \n                        \n                            EnvironmentModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/ioc/app.module.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { MiddlewareConsumer, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { ThrottlerModule } from '@nestjs/throttler';\nimport { WinstonModule } from 'nest-winston';\nimport CacheModule from './cache/cache.module';\nimport DatabaseModule from './database/database.module';\nimport { RequestMiddleware } from '../../core/middleware/request.middleware';\nimport httpProvider from '../http/provider/http.provider';\nimport eventOptions from '../event/event.options';\nimport environmentOptions from '../environment/environment.options';\nimport SwaggerOptions from '../swagger/swagger.options';\nimport throttlerOptions from '../security/ddos/throttler.options';\nimport { winstonConfig } from '../log/winston.options';\nimport { EnvironmentModule } from './environment.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(environmentOptions),\n    EventEmitterModule.forRoot(eventOptions),\n    HttpModule.registerAsync(httpProvider),\n    ThrottlerModule.forRoot(throttlerOptions),\n    WinstonModule.forRoot(winstonConfig),\n    CacheModule,\n    DatabaseModule,\n    EnvironmentModule,\n  ],\n  controllers: [],\n  providers: [SwaggerOptions],\n})\nexport class AppModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(RequestMiddleware).forRoutes('*');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApplicationEnvironment.html":{"url":"injectables/ApplicationEnvironment.html","title":"injectable - ApplicationEnvironment","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApplicationEnvironment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/environment/base/application.environment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppHost\n                            \n                            \n                                getAppName\n                            \n                            \n                                getAppPort\n                            \n                            \n                                getNodeEnv\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/configuration/environment/base/application.environment.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppHost\n                        \n                    \n                \n            \n            \n                \ngetAppHost()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/environment/base/application.environment.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppName\n                        \n                    \n                \n            \n            \n                \ngetAppName()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/environment/base/application.environment.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAppPort\n                        \n                    \n                \n            \n            \n                \ngetAppPort()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/environment/base/application.environment.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getNodeEnv\n                        \n                    \n                \n            \n            \n                \ngetNodeEnv()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/environment/base/application.environment.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EnvironmentEntity\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport ApplicationInterface from './application.interface';\nimport EnvironmentEntity from '../entity/environment.entity';\n\n@Injectable()\nclass ApplicationEnvironment implements ApplicationInterface {\n  constructor(private configService: ConfigService) {}\n\n  getAppName(): string {\n    return this.configService.get('APP_NAME');\n  }\n\n  getAppHost(): string {\n    return this.configService.get('APP_HOST');\n  }\n\n  getAppPort(): number {\n    return this.configService.get('APP_PORT');\n  }\n\n  getNodeEnv(): EnvironmentEntity {\n    return this.configService.get('NODE_ENV');\n  }\n}\n\nexport default ApplicationEnvironment;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationInterface.html":{"url":"classes/ApplicationInterface.html","title":"class - ApplicationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/environment/base/application.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getAppHost\n                            \n                            \n                                    Abstract\n                                getAppName\n                            \n                            \n                                    Abstract\n                                getAppPort\n                            \n                            \n                                    Abstract\n                                getNodeEnv\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getAppHost\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAppHost()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/environment/base/application.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getAppName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAppName()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/environment/base/application.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getAppPort\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAppPort()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/environment/base/application.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getNodeEnv\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNodeEnv()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/environment/base/application.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         EnvironmentEntity\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import EnvironmentEntity from '../entity/environment.entity';\n\nabstract class ApplicationInterface {\n  abstract getAppName(): string;\n  abstract getAppHost(): string;\n  abstract getAppPort(): number;\n  abstract getNodeEnv(): EnvironmentEntity;\n}\n\nexport default ApplicationInterface;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseEntity.html":{"url":"classes/BaseEntity.html","title":"class - BaseEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entity/base.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    id\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(id: number)\n                    \n                \n                        \n                            \n                                Defined in src/domain/entity/base.entity.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entity/base.entity.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n\n                \n                    \n                        getid()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entity/base.entity.ts:8\n                                \n                            \n\n                \n                    \n                        setid(id: number)\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entity/base.entity.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            id\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        abstract class BaseEntity {\n  private _id?: number;\n\n  constructor(id: number = null) {\n    this._id = id;\n  }\n\n  get id(): number {\n    return this._id;\n  }\n\n  set id(id: number) {\n    this._id = id;\n  }\n}\n\nexport default BaseEntity;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseUseCase.html":{"url":"interfaces/BaseUseCase.html","title":"interface - BaseUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BaseUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/usecase/base.usecase.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        execute\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/usecase/base.usecase.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise | TEntity\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        interface BaseUseCase {\n  execute(...args: any[]): Promise | TEntity;\n}\n\nexport default BaseUseCase;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheEnvironment.html":{"url":"injectables/CacheEnvironment.html","title":"injectable - CacheEnvironment","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CacheEnvironment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/cache/base/environment/cache.environment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCacheHost\n                            \n                            \n                                getCachePort\n                            \n                            \n                                getCacheTTL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/configuration/cache/base/environment/cache.environment.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCacheHost\n                        \n                    \n                \n            \n            \n                \ngetCacheHost()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/cache/base/environment/cache.environment.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCachePort\n                        \n                    \n                \n            \n            \n                \ngetCachePort()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/cache/base/environment/cache.environment.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCacheTTL\n                        \n                    \n                \n            \n            \n                \ngetCacheTTL()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/cache/base/environment/cache.environment.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport CacheInterface from \"./cache.interface\";\n\n@Injectable()\nabstract class CacheEnvironment implements CacheInterface {\n  constructor(protected readonly config: ConfigService) {}\n\n  getCacheHost(): string {\n    return this.config.get('CACHE_HOST');\n  }\n\n  getCachePort(): number {\n    return this.config.get('CACHE_PORT');\n  }\n\n  getCacheTTL(): number {\n    return this.config.get('CACHE_TTL');\n  }\n}\n\nexport default CacheEnvironment;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheInterface.html":{"url":"interfaces/CacheInterface.html","title":"interface - CacheInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CacheInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/cache/base/environment/cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCacheHost\n                                    \n                                \n                                \n                                    \n                                        getCachePort\n                                    \n                                \n                                \n                                    \n                                        getCacheTTL\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCacheHost\n                        \n                    \n                \n            \n            \n                \ngetCacheHost()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/cache/base/environment/cache.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCachePort\n                        \n                    \n                \n            \n            \n                \ngetCachePort()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/cache/base/environment/cache.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCacheTTL\n                        \n                    \n                \n            \n            \n                \ngetCacheTTL()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/cache/base/environment/cache.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        interface CacheInterface {\n  getCacheHost(): string;\n  getCachePort(): number;\n  getCacheTTL(): number;\n}\n\nexport default CacheInterface;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CacheModule.html":{"url":"modules/CacheModule.html","title":"module - CacheModule","body":"\n                   \n\n\n\n\n    Modules\n    CacheModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/configuration/ioc/cache/cache.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { CacheModule as CacheModuleNative, Module } from '@nestjs/common';\nimport { ClientOpts } from 'redis';\nimport redisModuleOptions from './provider/redis.provider';\n\n@Module({\n  imports: [CacheModuleNative.registerAsync(redisModuleOptions)],\n  providers: [],\n})\nclass CacheModule {}\n\nexport default CacheModule;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomValidationInterface.html":{"url":"interfaces/CustomValidationInterface.html","title":"interface - CustomValidationInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CustomValidationInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/validation/interface/validation.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ValidatorOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            always\n                                        \n                                \n                                \n                                        \n                                            disableErrorMessages\n                                        \n                                \n                                \n                                        \n                                            dismissDefaultMessages\n                                        \n                                \n                                \n                                        \n                                            enableDebugMessages\n                                        \n                                \n                                \n                                        \n                                            errorHttpStatusCode\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            exceptionFactory\n                                        \n                                \n                                \n                                        \n                                            forbidNonWhitelisted\n                                        \n                                \n                                \n                                        \n                                            forbidUnknownValues\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groups\n                                        \n                                \n                                \n                                        \n                                            skipMissingProperties\n                                        \n                                \n                                \n                                        \n                                            skipNullProperties\n                                        \n                                \n                                \n                                        \n                                            skipUndefinedProperties\n                                        \n                                \n                                \n                                        \n                                            stopAtFirstError\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            strictGroups\n                                        \n                                \n                                \n                                        \n                                            validationError.target\n                                        \n                                \n                                \n                                        \n                                            validationError.value\n                                        \n                                \n                                \n                                        \n                                            whitelist\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        always\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        always:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableErrorMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disableErrorMessages:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dismissDefaultMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dismissDefaultMessages:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enableDebugMessages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        enableDebugMessages:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        errorHttpStatusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorHttpStatusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        exceptionFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        exceptionFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forbidNonWhitelisted\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forbidNonWhitelisted:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        forbidUnknownValues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forbidUnknownValues:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groups:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipMissingProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipMissingProperties:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipNullProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipNullProperties:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        skipUndefinedProperties\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        skipUndefinedProperties:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        stopAtFirstError\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        stopAtFirstError:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        strictGroups\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        strictGroups:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validationError.target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validationError.target:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validationError.value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        validationError.value:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        whitelist\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        whitelist:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ValidationError } from '@nestjs/common';\nimport { ValidatorOptions } from 'class-validator';\n\ninterface CustomValidationInterface extends ValidatorOptions {\n  always: boolean;\n  disableErrorMessages: boolean;\n  dismissDefaultMessages: boolean;\n  enableDebugMessages: boolean;\n  errorHttpStatusCode: number;\n  exceptionFactory?: (errors: ValidationError[]) => any;\n  forbidNonWhitelisted: boolean;\n  forbidUnknownValues: boolean;\n  groups?: string[];\n  strictGroups?: boolean;\n  skipMissingProperties: boolean;\n  skipNullProperties: boolean;\n  skipUndefinedProperties: boolean;\n  stopAtFirstError: boolean;\n  'validationError.target': boolean;\n  'validationError.value': boolean;\n  whitelist: boolean;\n}\n\nexport default CustomValidationInterface;\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomerEntity.html":{"url":"classes/CustomerEntity.html","title":"class - CustomerEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomerEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entity/customer/customer.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:2\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import BaseEntity from \"../base.entity\";\n\nclass CustomerEntity extends BaseEntity {}\n\nexport default CustomerEntity;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseEnvironment.html":{"url":"injectables/DatabaseEnvironment.html","title":"injectable - DatabaseEnvironment","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseEnvironment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/database/base/environment/database.environment.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDatabaseHost\n                            \n                            \n                                getDatabaseName\n                            \n                            \n                                getDatabasePassword\n                            \n                            \n                                getDatabasePort\n                            \n                            \n                                getDatabaseUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/configuration/database/base/environment/database.environment.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseHost\n                        \n                    \n                \n            \n            \n                \ngetDatabaseHost()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/database/base/environment/database.environment.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseName\n                        \n                    \n                \n            \n            \n                \ngetDatabaseName()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/database/base/environment/database.environment.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabasePassword\n                        \n                    \n                \n            \n            \n                \ngetDatabasePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/database/base/environment/database.environment.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabasePort\n                        \n                    \n                \n            \n            \n                \ngetDatabasePort()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/database/base/environment/database.environment.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseUser\n                        \n                    \n                \n            \n            \n                \ngetDatabaseUser()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/database/base/environment/database.environment.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport DatabaseInterface from \"./database.interface\";\n\n@Injectable()\nclass DatabaseEnvironment implements DatabaseInterface {\n  constructor(protected configService: ConfigService) {}\n\n  getDatabaseHost(): string {\n    return this.configService.get('DATABASE_HOST');\n  }\n\n  getDatabasePort(): number {\n    return this.configService.get('DATABASE_PORT');\n  }\n\n  getDatabaseUser(): string {\n    return this.configService.get('DATABASE_USER');\n  }\n\n  getDatabasePassword(): string {\n    return this.configService.get('DATABASE_PASSWORD');\n  }\n\n  getDatabaseName(): string {\n    return this.configService.get('DATABASE_NAME');\n  }\n\n}\n\nexport default DatabaseEnvironment;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DatabaseInterface.html":{"url":"classes/DatabaseInterface.html","title":"class - DatabaseInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DatabaseInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/database/base/environment/database.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getDatabaseHost\n                            \n                            \n                                    Abstract\n                                getDatabaseName\n                            \n                            \n                                    Abstract\n                                getDatabasePassword\n                            \n                            \n                                    Abstract\n                                getDatabasePort\n                            \n                            \n                                    Abstract\n                                getDatabaseUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatabaseHost\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseHost()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/database/base/environment/database.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatabaseName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseName()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/database/base/environment/database.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatabasePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabasePassword()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/database/base/environment/database.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatabasePort\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabasePort()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/database/base/environment/database.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatabaseUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseUser()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/database/base/environment/database.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        abstract class DatabaseInterface {\n  abstract getDatabaseHost(): string;\n  abstract getDatabasePort(): number;\n  abstract getDatabaseUser(): string;\n  abstract getDatabasePassword(): string;\n  abstract getDatabaseName(): string;\n}\n\nexport default DatabaseInterface;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/configuration/ioc/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { ConfigurableModuleClass } from '@nestjs/common/cache/cache.module-definition';\nimport MongooseProvider from './provider/mongoose.provider';\n\n@Global()\n@Module({\n  imports: [MongooseModule.forRootAsync(MongooseProvider)],\n  providers: [],\n  exports: [],\n})\nclass DatabaseModule extends ConfigurableModuleClass {}\n\nexport default DatabaseModule;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EnvironmentModule.html":{"url":"modules/EnvironmentModule.html","title":"module - EnvironmentModule","body":"\n                   \n\n\n\n\n    Modules\n    EnvironmentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EnvironmentModule\n\n\n\ncluster_EnvironmentModule_exports\n\n\n\ncluster_EnvironmentModule_providers\n\n\n\n\nApplicationEnvironment \n\nApplicationEnvironment \n\n\n\nMongooseEnvironment \n\nMongooseEnvironment \n\n\n\nEnvironmentModule\n\nEnvironmentModule\n\nApplicationEnvironment  -->\n\nEnvironmentModule->ApplicationEnvironment \n\n\n\nMongooseEnvironment  -->\n\nEnvironmentModule->MongooseEnvironment \n\n\n\n\n\nApplicationEnvironment\n\nApplicationEnvironment\n\nEnvironmentModule -->\n\nApplicationEnvironment->EnvironmentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/infrastructure/configuration/ioc/environment.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApplicationEnvironment\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApplicationEnvironment\n                        \n                        \n                            MongooseEnvironment\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport ApplicationEnvironment from '../environment/base/application.environment';\nimport MongooseEnvironment from '../database/mongo/environment/mongoose.environment';\n\n@Module({\n  imports: [],\n  providers: [ApplicationEnvironment, MongooseEnvironment],\n  exports: [ApplicationEnvironment, MongooseEnvironment],\n})\nexport class EnvironmentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpOptions.html":{"url":"injectables/HttpOptions.html","title":"injectable - HttpOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/http/http.options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createHttpOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createHttpOptions\n                        \n                    \n                \n            \n            \n                \ncreateHttpOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/http/http.options.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | HttpModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpModuleOptions, HttpModuleOptionsFactory } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nclass HttpOptions implements HttpModuleOptionsFactory {\n  createHttpOptions(): Promise | HttpModuleOptions {\n    return {\n      maxRedirects: 5,\n      timeout: 5000,\n    };\n  }\n}\n\nexport default HttpOptions;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongooseEnvironment.html":{"url":"classes/MongooseEnvironment.html","title":"class - MongooseEnvironment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongooseEnvironment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/database/mongo/environment/mongoose.environment.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseEnvironment\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDatabaseProtocol\n                            \n                            \n                                getDatabaseHost\n                            \n                            \n                                getDatabaseName\n                            \n                            \n                                getDatabasePassword\n                            \n                            \n                                getDatabasePort\n                            \n                            \n                                getDatabaseUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseProtocol\n                        \n                    \n                \n            \n            \n                \ngetDatabaseProtocol()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/database/mongo/environment/mongoose.environment.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseHost\n                        \n                    \n                \n            \n            \n                \ngetDatabaseHost()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseName\n                        \n                    \n                \n            \n            \n                \ngetDatabaseName()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabasePassword\n                        \n                    \n                \n            \n            \n                \ngetDatabasePassword()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabasePort\n                        \n                    \n                \n            \n            \n                \ngetDatabasePort()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseUser\n                        \n                    \n                \n            \n            \n                \ngetDatabaseUser()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import DatabaseEnvironment from '../../base/environment/database.environment';\n\nclass MongooseEnvironment extends DatabaseEnvironment {\n  getDatabaseProtocol(): boolean {\n    return this.configService.get('DATABASE_PROTOCOL');\n  }\n}\n\nexport default MongooseEnvironment;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MysqlOptions.html":{"url":"injectables/MysqlOptions.html","title":"injectable - MysqlOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MysqlOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/database/typeorm/mysql-typeorm.options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                IS_PRODUCTION\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationConfig: ApplicationEnvironment, databaseConfig: MysqlEnvironment)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/configuration/database/typeorm/mysql-typeorm.options.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationConfig\n                                                  \n                                                        \n                                                                        ApplicationEnvironment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        databaseConfig\n                                                  \n                                                        \n                                                                    MysqlEnvironment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createTypeOrmOptions\n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/database/typeorm/mysql-typeorm.options.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     TypeOrmModuleOptions\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        IS_PRODUCTION\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/configuration/database/typeorm/mysql-typeorm.options.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { TypeOrmModuleOptions, TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport EnvironmentEntity from '../../environment/entity/environment.entity';\nimport ApplicationEnvironment from '../../environment/base/application.environment';\nimport MysqlEnvironment from './environment/mysql-typeorm.environment';\n\n@Injectable()\nclass MysqlOptions implements TypeOrmOptionsFactory {\n  private readonly IS_PRODUCTION: boolean;\n\n  constructor(\n    private readonly applicationConfig: ApplicationEnvironment,\n    private readonly databaseConfig: MysqlEnvironment,\n  ) {\n    this.IS_PRODUCTION =\n      this.applicationConfig.getNodeEnv() === EnvironmentEntity.PRODUCTION;\n  }\n\n  createTypeOrmOptions(): TypeOrmModuleOptions {\n    return {\n      type: 'mysql',\n      host: this.databaseConfig.getDatabaseHost(),\n      port: this.databaseConfig.getDatabasePort(),\n      username: this.databaseConfig.getDatabaseUser(),\n      password: this.databaseConfig.getDatabasePassword(),\n      database: this.databaseConfig.getDatabaseName(),\n      synchronize: this.databaseConfig.getDatabaseSynchronize(),\n      autoLoadEntities: true,\n      bigNumberStrings: true,\n      cache: false,\n      charset: 'UTF8_GENERAL_CI',\n      connectTimeout: 10000,\n      connectorPackage: 'mysql2',\n      dateStrings: true,\n      debug: !this.IS_PRODUCTION,\n      dropSchema: false,\n      insecureAuth: this.IS_PRODUCTION,\n      logging: true,\n      multipleStatements: true,\n      poolSize: 10,\n      retryAttempts: 5,\n      retryDelay: 30000,\n      supportBigNumbers: false,\n      trace: !this.IS_PRODUCTION,\n      timezone: 'local',\n    };\n  }\n}\n\nexport default MysqlOptions;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MysqlRawEnvironment.html":{"url":"classes/MysqlRawEnvironment.html","title":"class - MysqlRawEnvironment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MysqlRawEnvironment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/database/mysql/environment/mysql-raw.environment.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseEnvironment\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDatabaseHost\n                            \n                            \n                                getDatabaseName\n                            \n                            \n                                getDatabasePassword\n                            \n                            \n                                getDatabasePort\n                            \n                            \n                                getDatabaseUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseHost\n                        \n                    \n                \n            \n            \n                \ngetDatabaseHost()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseName\n                        \n                    \n                \n            \n            \n                \ngetDatabaseName()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabasePassword\n                        \n                    \n                \n            \n            \n                \ngetDatabasePassword()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabasePort\n                        \n                    \n                \n            \n            \n                \ngetDatabasePort()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseUser\n                        \n                    \n                \n            \n            \n                \ngetDatabaseUser()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import DatabaseEnvironment from \"../../base/environment/database.environment\";\n\nclass MysqlRawEnvironment extends DatabaseEnvironment {}\n\nexport default MysqlRawEnvironment;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MysqlTypeOrmEnvironment.html":{"url":"classes/MysqlTypeOrmEnvironment.html","title":"class - MysqlTypeOrmEnvironment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MysqlTypeOrmEnvironment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/database/typeorm/environment/mysql-typeorm.environment.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseEnvironment\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getDatabaseSynchronize\n                            \n                            \n                                getDatabaseHost\n                            \n                            \n                                getDatabaseName\n                            \n                            \n                                getDatabasePassword\n                            \n                            \n                                getDatabasePort\n                            \n                            \n                                getDatabaseUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseSynchronize\n                        \n                    \n                \n            \n            \n                \ngetDatabaseSynchronize()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/database/typeorm/environment/mysql-typeorm.environment.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseHost\n                        \n                    \n                \n            \n            \n                \ngetDatabaseHost()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseName\n                        \n                    \n                \n            \n            \n                \ngetDatabaseName()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabasePassword\n                        \n                    \n                \n            \n            \n                \ngetDatabasePassword()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabasePort\n                        \n                    \n                \n            \n            \n                \ngetDatabasePort()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseUser\n                        \n                    \n                \n            \n            \n                \ngetDatabaseUser()\n                \n            \n\n\n            \n                \n                    Inherited from         DatabaseEnvironment\n\n                \n            \n            \n                \n                        Defined in         DatabaseEnvironment:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import DatabaseEnvironment from '../../base/environment/database.environment';\n\nclass MysqlTypeOrmEnvironment extends DatabaseEnvironment {\n  getDatabaseSynchronize(): boolean {\n    return this.configService.get('DATABASE_SYNCHRONIZE');\n  }\n}\n\nexport default MysqlTypeOrmEnvironment;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RedisEnvironment.html":{"url":"classes/RedisEnvironment.html","title":"class - RedisEnvironment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RedisEnvironment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/cache/redis/environment/redis.environment.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CacheEnvironment\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCacheLogicalDatabase\n                            \n                            \n                                getCacheHost\n                            \n                            \n                                getCachePort\n                            \n                            \n                                getCacheTTL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCacheLogicalDatabase\n                        \n                    \n                \n            \n            \n                \ngetCacheLogicalDatabase()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/cache/redis/environment/redis.environment.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCacheHost\n                        \n                    \n                \n            \n            \n                \ngetCacheHost()\n                \n            \n\n\n            \n                \n                    Inherited from         CacheEnvironment\n\n                \n            \n            \n                \n                        Defined in         CacheEnvironment:9\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCachePort\n                        \n                    \n                \n            \n            \n                \ngetCachePort()\n                \n            \n\n\n            \n                \n                    Inherited from         CacheEnvironment\n\n                \n            \n            \n                \n                        Defined in         CacheEnvironment:13\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCacheTTL\n                        \n                    \n                \n            \n            \n                \ngetCacheTTL()\n                \n            \n\n\n            \n                \n                    Inherited from         CacheEnvironment\n\n                \n            \n            \n                \n                        Defined in         CacheEnvironment:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import CacheEnvironment from '../../base/environment/cache.environment';\n\nclass RedisEnvironment extends CacheEnvironment {\n  getCacheLogicalDatabase(): number {\n    return this.config.get('CACHE_LOGICAL_DATABASE');\n  }\n}\n\nexport default RedisEnvironment;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RedisOptionsFactory.html":{"url":"injectables/RedisOptionsFactory.html","title":"injectable - RedisOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RedisOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/cache/redis/redis-options-factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCacheOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cacheConfig: RedisEnvironment)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/configuration/cache/redis/redis-options-factory.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cacheConfig\n                                                  \n                                                        \n                                                                        RedisEnvironment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCacheOptions\n                        \n                    \n                \n            \n            \n                \ncreateCacheOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/cache/redis/redis-options-factory.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     CacheModuleOptions>\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CacheModuleOptions,\n  CacheOptionsFactory,\n  Injectable,\n} from '@nestjs/common';\nimport * as redisStore from 'cache-manager-redis-store';\nimport RedisEnvironment from './environment/redis.environment';\n\n@Injectable()\nclass RedisOptionsFactory implements CacheOptionsFactory {\n  constructor(private readonly cacheConfig: RedisEnvironment) {}\n\n  createCacheOptions(): CacheModuleOptions> {\n    return {\n      host: this.cacheConfig.getCacheHost(),\n      port: this.cacheConfig.getCachePort(),\n      database: this.cacheConfig.getCacheLogicalDatabase(),\n      ttl: this.cacheConfig.getCacheTTL(),\n      store: redisStore,\n      isGlobal: true,\n      max: 1000,\n    };\n  }\n}\n\nexport default RedisOptionsFactory;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUseCase.html":{"url":"classes/RegisterUseCase.html","title":"class - RegisterUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/usecase/customer/register.usecase.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            BaseUseCase\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        execute\n                        \n                    \n                \n            \n            \n                \nexecute(...args: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/domain/usecase/customer/register.usecase.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    args\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CustomerEntity | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import CustomerEntity from \"src/domain/entity/customer/customer.entity\";\nimport BaseUseCase from \"../base.usecase\";\n\nclass RegisterUseCase implements BaseUseCase {\n  execute(...args: any[]): CustomerEntity | Promise {\n    throw new Error(\"Method not implemented.\");\n  }\n}\n\nexport default RegisterUseCase;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestMiddleware.html":{"url":"injectables/RequestMiddleware.html","title":"injectable - RequestMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/core/middleware/request.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                requestFormat\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        requestFormat\n                        \n                    \n                \n            \n            \n                \nrequestFormat(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/core/middleware/request.middleware.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { route: string; body: any; headers: any; cache: any; mode: any; credentials: any; destination: any; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(request: Request, response: Response, next: () => void)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/core/middleware/request.middleware.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(RequestMiddleware.name)\n                    \n                \n                    \n                        \n                                Defined in src/infrastructure/core/middleware/request.middleware.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NestMiddleware } from '@nestjs/common';\n\n@Injectable()\nexport class RequestMiddleware implements NestMiddleware {\n  private readonly logger: Logger = new Logger(RequestMiddleware.name);\n\n  use(request: Request, response: Response, next: () => void) {\n    this.logger.debug(\n      'Request: %O',\n      this.requestFormat(request),\n      RequestMiddleware.name,\n    );\n\n    next();\n  }\n\n  requestFormat(request: Request) {\n    return {\n      route: `${request.method} - ${request.url}`,\n      body: request.body,\n      headers: request.headers,\n      cache: request.cache,\n      mode: request.mode,\n      credentials: request.credentials,\n      destination: request.destination,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/State.html":{"url":"classes/State.html","title":"class - State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  State\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entity/customer/address/state.entity.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _initials\n                            \n                            \n                                    Private\n                                _name\n                            \n                            \n                                    Private\n                                    Optional\n                                _id\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nameIsValid\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    initials\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: StateEnum)\n                    \n                \n                        \n                            \n                                Defined in src/domain/entity/customer/address/state.entity.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        StateEnum\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _initials\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entity/customer/address/state.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         StateEnum\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entity/customer/address/state.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                Inherited from         BaseEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseEntity:2\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        nameIsValid\n                        \n                    \n                \n            \n            \n                \nnameIsValid(name: StateEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/domain/entity/customer/address/state.entity.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                StateEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entity/customer/address/state.entity.ts:23\n                                \n                            \n\n                \n                    \n                        setname(name: StateEnum)\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entity/customer/address/state.entity.ts:27\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            name\n                                                    \n                                                            \n                                                                            StateEnum\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        initials\n                    \n                \n\n                \n                    \n                        getinitials()\n                    \n                \n                            \n                                \n                                    Defined in src/domain/entity/customer/address/state.entity.ts:35\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import StateEnum from './state.enum';\nimport StateInvalidException from '../../exception/state-invalid.exception';\nimport BaseEntity from '../../base.entity';\n\nclass State extends BaseEntity {\n  private _name: StateEnum;\n  private _initials: string;\n\n  constructor(name: StateEnum) {\n    super();\n    \n    const isValid = this.nameIsValid(name);\n    if (!isValid) throw new StateInvalidException(name);\n\n    this._name = name;\n    this._initials = StateEnum[name];\n  }\n\n  nameIsValid(name: StateEnum): boolean {\n    return Object.values(StateEnum).includes(name);\n  }\n\n  get name(): StateEnum {\n    return this._name;\n  }\n\n  set name(name: StateEnum) {\n    const isValid = this.nameIsValid(name);\n    if (!isValid) throw new StateInvalidException(name);\n\n    this._name = name;\n    this._initials = StateEnum[name];\n  }\n\n  get initials(): string {\n    return this._initials;\n  }\n}\n\nexport default State;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StateInvalidException.html":{"url":"classes/StateInvalidException.html","title":"class - StateInvalidException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StateInvalidException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/domain/entity/exception/state-invalid.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                message\n                            \n                            \n                                name\n                            \n                            \n                                stack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(value: string, stack: string)\n                    \n                \n                        \n                            \n                                Defined in src/domain/entity/exception/state-invalid.exception.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        stack\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entity/exception/state-invalid.exception.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entity/exception/state-invalid.exception.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stack\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/domain/entity/exception/state-invalid.exception.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class StateInvalidException extends Error {\n  name: string;\n  message: string;\n  stack: string;\n\n  constructor(value: string, stack: string = null) {\n    super(`This state ${value} is invalid.`);\n    this.name = StateInvalidException.name;\n    this.stack = stack;\n  }\n}\n\nexport default StateInvalidException;\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SwaggerOptions.html":{"url":"injectables/SwaggerOptions.html","title":"injectable - SwaggerOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SwaggerOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/infrastructure/configuration/swagger/swagger.options.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(applicationService: ApplicationEnvironment)\n                    \n                \n                        \n                            \n                                Defined in src/infrastructure/configuration/swagger/swagger.options.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationService\n                                                  \n                                                        \n                                                                        ApplicationEnvironment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setup\n                        \n                    \n                \n            \n            \n                \nsetup(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/infrastructure/configuration/swagger/swagger.options.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { DocumentBuilder, OpenAPIObject, SwaggerModule } from '@nestjs/swagger';\nimport { INestApplication, Injectable } from '@nestjs/common';\nimport ApplicationEnvironment from '../environment/base/application.environment';\n\n@Injectable()\nclass SwaggerOptions {\n  constructor(private readonly applicationService: ApplicationEnvironment) {}\n\n  setup(app: INestApplication) {\n    const config: Omit = new DocumentBuilder()\n      .setTitle(this.applicationService.getAppName())\n      .setDescription('The cats API description')\n      .setVersion('1.0')\n      .addTag('music-pro')\n      .build();\n\n    const document = SwaggerModule.createDocument(app, config);\n    SwaggerModule.setup('api', app, document);\n  }\n}\n\nexport default SwaggerOptions;\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/domain/entity/base.entity.ts\n            \n            class\n            BaseEntity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/domain/entity/customer/address/state.entity.ts\n            \n            class\n            State\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/domain/entity/customer/customer.entity.ts\n            \n            class\n            CustomerEntity\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain/entity/exception/state-invalid.exception.ts\n            \n            class\n            StateInvalidException\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/domain/usecase/base.usecase.ts\n            \n            interface\n            BaseUseCase\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/domain/usecase/customer/register.usecase.ts\n            \n            class\n            RegisterUseCase\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/cache/base/environment/cache.environment.ts\n            \n            injectable\n            CacheEnvironment\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/cache/base/environment/cache.interface.ts\n            \n            interface\n            CacheInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/cache/redis/environment/redis.environment.ts\n            \n            class\n            RedisEnvironment\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/cache/redis/redis-options-factory.ts\n            \n            injectable\n            RedisOptionsFactory\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/database/base/environment/database.environment.ts\n            \n            injectable\n            DatabaseEnvironment\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/database/base/environment/database.interface.ts\n            \n            class\n            DatabaseInterface\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/database/mongo/environment/mongoose.environment.ts\n            \n            class\n            MongooseEnvironment\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/database/mongo/mongoose.options.ts\n            \n            variable\n            MongooseOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/database/mysql/environment/mysql-raw.environment.ts\n            \n            class\n            MysqlRawEnvironment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/database/mysql/mysql-raw.options.ts\n            \n            variable\n            mysqlRawOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/database/typeorm/environment/mysql-typeorm.environment.ts\n            \n            class\n            MysqlTypeOrmEnvironment\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/database/typeorm/mysql-typeorm.options.ts\n            \n            injectable\n            MysqlOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/environment/base/application.environment.ts\n            \n            injectable\n            ApplicationEnvironment\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/environment/base/application.interface.ts\n            \n            class\n            ApplicationInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/environment/environment.options.ts\n            \n            variable\n            environmentOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/environment/helper/environment.validation.ts\n            \n            variable\n            environmentValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/environment/helper/get-environment.helper.ts\n            \n            variable\n            getEnvironment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/event/event.options.ts\n            \n            variable\n            eventOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/http/http.options.ts\n            \n            injectable\n            HttpOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/http/provider/http.provider.ts\n            \n            variable\n            httpProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/ioc/cache/provider/redis.provider.ts\n            \n            variable\n            redisModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/ioc/database/provider/mongoose.provider.ts\n            \n            variable\n            MongooseProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/ioc/database/provider/mysql-raw.provider.ts\n            \n            variable\n            MysqlProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/ioc/database/provider/mysql.provider.ts\n            \n            variable\n            MysqlTypeOrmModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/ioc/database/settings/database.module-definitions.ts\n            \n            variable\n            CONNECTION_POOL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/ioc/database/settings/database.module-definitions.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/log/winston.options.ts\n            \n            variable\n            consoleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/log/winston.options.ts\n            \n            variable\n            DIR_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/log/winston.options.ts\n            \n            variable\n            fileOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/log/winston.options.ts\n            \n            variable\n            logConsole\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/log/winston.options.ts\n            \n            variable\n            logFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/log/winston.options.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/log/winston.options.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/log/winston.options.ts\n            \n            variable\n            winstonConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/security/ddos/throttler.options.ts\n            \n            variable\n            throttlerOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/swagger/swagger.options.ts\n            \n            injectable\n            SwaggerOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/validation/interface/validation.interface.ts\n            \n            interface\n            CustomValidationInterface\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/validation/validation.options.ts\n            \n            variable\n            validationGlobalPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/configuration/versioning/versioning.options.ts\n            \n            variable\n            versioningOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/infrastructure/core/middleware/request.middleware.ts\n            \n            injectable\n            RequestMiddleware\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            setupMiddlewares\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            start\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^0.1.0\n        \n            @nestjs/common : ^9.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.0.0\n        \n            @nestjs/event-emitter : ^1.3.1\n        \n            @nestjs/mongoose : ^9.2.0\n        \n            @nestjs/platform-express : ^9.0.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            @nestjs/throttler : ^3.0.0\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            cache-manager : ^4.1.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            helmet : ^6.0.0\n        \n            joi : ^17.6.1\n        \n            mongoose : ^6.6.2\n        \n            mysql2 : ^2.3.3\n        \n            nest-winston : ^1.7.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.10\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EnvironmentEntity   (src/.../environment.entity.ts)\n                        \n                        \n                            EnvironmentFileEntity   (src/.../environment-file.entity.ts)\n                        \n                        \n                            StateEnum   (src/.../state.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/infrastructure/configuration/environment/entity/environment.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        EnvironmentEntity\n                    \n                \n                        \n                            \n                                 LOCAL\n                            \n                        \n                        \n                            \n                                Value : local\n                            \n                        \n                        \n                            \n                                 DEVELOPMENT\n                            \n                        \n                        \n                            \n                                Value : development\n                            \n                        \n                        \n                            \n                                 TESTING\n                            \n                        \n                        \n                            \n                                Value : testing\n                            \n                        \n                        \n                            \n                                 PRODUCTION\n                            \n                        \n                        \n                            \n                                Value : production\n                            \n                        \n            \n        \n\n    src/infrastructure/configuration/environment/entity/environment-file.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        EnvironmentFileEntity\n                    \n                \n                        \n                            \n                                 DEVELOPMENT_LOCAL\n                            \n                        \n                        \n                            \n                                Value : .env.local\n                            \n                        \n                        \n                            \n                                 DEVELOPMENT_SERVER\n                            \n                        \n                        \n                            \n                                Value : .env.development\n                            \n                        \n                        \n                            \n                                 TESTING\n                            \n                        \n                        \n                            \n                                Value : .env.testing\n                            \n                        \n                        \n                            \n                                 PRODUCTION\n                            \n                        \n                        \n                            \n                                Value : .env.production\n                            \n                        \n            \n        \n\n    src/domain/entity/customer/address/state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        StateEnum\n                    \n                \n                        \n                            \n                                 AC\n                            \n                        \n                        \n                            \n                                Value : Acre\n                            \n                        \n                        \n                            \n                                 AL\n                            \n                        \n                        \n                            \n                                Value : Alagoas\n                            \n                        \n                        \n                            \n                                 AP\n                            \n                        \n                        \n                            \n                                Value : Amapá\n                            \n                        \n                        \n                            \n                                 AM\n                            \n                        \n                        \n                            \n                                Value : Amazonas\n                            \n                        \n                        \n                            \n                                 BA\n                            \n                        \n                        \n                            \n                                Value : Bahia\n                            \n                        \n                        \n                            \n                                 CE\n                            \n                        \n                        \n                            \n                                Value : Ceará\n                            \n                        \n                        \n                            \n                                 DF\n                            \n                        \n                        \n                            \n                                Value : Distrito Federal\n                            \n                        \n                        \n                            \n                                 ES\n                            \n                        \n                        \n                            \n                                Value : Espírito Santo\n                            \n                        \n                        \n                            \n                                 GO\n                            \n                        \n                        \n                            \n                                Value : Goiás\n                            \n                        \n                        \n                            \n                                 MA\n                            \n                        \n                        \n                            \n                                Value : Maranhão\n                            \n                        \n                        \n                            \n                                 MT\n                            \n                        \n                        \n                            \n                                Value : Mato Grosso\n                            \n                        \n                        \n                            \n                                 MS\n                            \n                        \n                        \n                            \n                                Value : Mato Grosso do Sul\n                            \n                        \n                        \n                            \n                                 MG\n                            \n                        \n                        \n                            \n                                Value : Minas Gerais\n                            \n                        \n                        \n                            \n                                 PA\n                            \n                        \n                        \n                            \n                                Value : Pará\n                            \n                        \n                        \n                            \n                                 PB\n                            \n                        \n                        \n                            \n                                Value : Paraíba\n                            \n                        \n                        \n                            \n                                 PR\n                            \n                        \n                        \n                            \n                                Value : Paraná\n                            \n                        \n                        \n                            \n                                 PE\n                            \n                        \n                        \n                            \n                                Value : Pernambuco\n                            \n                        \n                        \n                            \n                                 PI\n                            \n                        \n                        \n                            \n                                Value : Piauí\n                            \n                        \n                        \n                            \n                                 RJ\n                            \n                        \n                        \n                            \n                                Value : Rio de Janeiro\n                            \n                        \n                        \n                            \n                                 RN\n                            \n                        \n                        \n                            \n                                Value : Rio Grande do Norte\n                            \n                        \n                        \n                            \n                                 RS\n                            \n                        \n                        \n                            \n                                Value : Rio Grande do Sul\n                            \n                        \n                        \n                            \n                                 RO\n                            \n                        \n                        \n                            \n                                Value : Rondônia\n                            \n                        \n                        \n                            \n                                 RR\n                            \n                        \n                        \n                            \n                                Value : Roraima\n                            \n                        \n                        \n                            \n                                 SC\n                            \n                        \n                        \n                            \n                                Value : Santa Catarina\n                            \n                        \n                        \n                            \n                                 SP\n                            \n                        \n                        \n                            \n                                Value : São Paulo\n                            \n                        \n                        \n                            \n                                 SE\n                            \n                        \n                        \n                            \n                                Value : Sergipe\n                            \n                        \n                        \n                            \n                                 TO\n                            \n                        \n                        \n                            \n                                Value : Tocantins\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            setupMiddlewares   (src/.../main.ts)\n                        \n                        \n                            start   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Nest Bootstrap\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupMiddlewares\n                        \n                    \n                \n            \n            \n                \nsetupMiddlewares(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n                    Init Middlewares\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nest Instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start\n                        \n                    \n                \n            \n            \n                \nstart(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n                    Start Application\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nest Instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CacheModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EnvironmentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_EnvironmentModule\n\n\n\ncluster_EnvironmentModule_exports\n\n\n\ncluster_EnvironmentModule_providers\n\n\n\n\nCacheModule\n\nCacheModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCacheModule->AppModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nEnvironmentModule\n\nEnvironmentModule\n\nAppModule -->\n\nEnvironmentModule->AppModule\n\n\n\n\n\nApplicationEnvironment \n\nApplicationEnvironment \n\nApplicationEnvironment  -->\n\nEnvironmentModule->ApplicationEnvironment \n\n\n\n\n\nMongooseEnvironment \n\nMongooseEnvironment \n\nMongooseEnvironment  -->\n\nEnvironmentModule->MongooseEnvironment \n\n\n\n\n\nSwaggerOptions\n\nSwaggerOptions\n\nAppModule -->\n\nSwaggerOptions->AppModule\n\n\n\n\n\nApplicationEnvironment\n\nApplicationEnvironment\n\nEnvironmentModule -->\n\nApplicationEnvironment->EnvironmentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CONNECTION_POOL   (src/.../database.module-definitions.ts)\n                        \n                        \n                            consoleOptions   (src/.../winston.options.ts)\n                        \n                        \n                            DIR_PATH   (src/.../winston.options.ts)\n                        \n                        \n                            environmentOptions   (src/.../environment.options.ts)\n                        \n                        \n                            environmentValidation   (src/.../environment.validation.ts)\n                        \n                        \n                            eventOptions   (src/.../event.options.ts)\n                        \n                        \n                            fileOptions   (src/.../winston.options.ts)\n                        \n                        \n                            getEnvironment   (src/.../get-environment.helper.ts)\n                        \n                        \n                            httpProvider   (src/.../http.provider.ts)\n                        \n                        \n                            logConsole   (src/.../winston.options.ts)\n                        \n                        \n                            logFile   (src/.../winston.options.ts)\n                        \n                        \n                            MongooseOptions   (src/.../mongoose.options.ts)\n                        \n                        \n                            MongooseProvider   (src/.../mongoose.provider.ts)\n                        \n                        \n                            MysqlProvider   (src/.../mysql-raw.provider.ts)\n                        \n                        \n                            mysqlRawOptions   (src/.../mysql-raw.options.ts)\n                        \n                        \n                            MysqlTypeOrmModuleOptions   (src/.../mysql.provider.ts)\n                        \n                        \n                            redisModuleOptions   (src/.../redis.provider.ts)\n                        \n                        \n                            throttlerOptions   (src/.../throttler.options.ts)\n                        \n                        \n                               (src/.../winston.options.ts)\n                        \n                        \n                               (src/.../winston.options.ts)\n                        \n                        \n                            validationGlobalPipe   (src/.../validation.options.ts)\n                        \n                        \n                            versioningOptions   (src/.../versioning.options.ts)\n                        \n                        \n                            winstonConfig   (src/.../winston.options.ts)\n                        \n                        \n                               (src/.../database.module-definitions.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/infrastructure/configuration/ioc/database/settings/database.module-definitions.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CONNECTION_POOL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'CONNECTION_POOL'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ConfigurableModuleBuilder().setClassMethodName('forRoot').build()\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/log/winston.options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        consoleOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConsoleTransportOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.ms(),\n    winston.format.splat(),\n    winston.format.errors(),\n    utilities.format.nestLike('music-pro-template', {\n      prettyPrint: true,\n      colors: true,\n    }),\n  ),\n  level: 'debug',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DIR_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : path.join(__dirname, './../../../../logs/')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileTransportOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  dirname: DIR_PATH,\n  filename: 'music-pro-template.log',\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.ms(),\n    winston.format.logstash(),\n  ),\n  level: 'debug',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logConsole\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConsoleTransportInstance\n\n                    \n                \n                \n                    \n                        Default value : new Console(consoleOptions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FileTransportInstance\n\n                    \n                \n                \n                    \n                        Default value : new transports.File(fileOptions)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : winston\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                    \n                \n            \n                \n                    \n                        Default value : transports\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        winstonConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  transports: [logConsole, logFile],\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/environment/environment.options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environmentOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  cache: true,\n  encoding: 'utf8',\n  envFilePath: getEnvironment(),\n  expandVariables: true,\n  ignoreEnvFile: false,\n  ignoreEnvVars: false,\n  isGlobal: true,\n  load: undefined,\n  validationSchema: environmentValidation(),\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/environment/helper/environment.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environmentValidation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): Joi.ObjectSchema => {\n  const local = EnvironmentEntity.LOCAL;\n  const development = EnvironmentEntity.DEVELOPMENT;\n  const testing = EnvironmentEntity.TESTING;\n  const production = EnvironmentEntity.PRODUCTION;\n  const environments = [local, development, testing, production];\n\n  return Joi.object({\n    NODE_ENV: Joi.string().valid(...environments),\n    APP_NAME: Joi.string().required(),\n    APP_HOST: Joi.string().required(),\n    APP_PORT: Joi.number().port().required(),\n    CACHE_HOST: Joi.string().required(),\n    CACHE_PORT: Joi.number().port().required(),\n    CACHE_DATABASE_LOGICAL: Joi.number().required(),\n    CACHE_TTL: Joi.number().required(),\n    DATABASE_HOST: Joi.string().required(),\n    DATABASE_PORT: Joi.number().port(),\n    DATABASE_USER: Joi.string().required(),\n    DATABASE_PASSWORD: Joi.string().required(),\n    DATABASE_NAME: Joi.string().required(),\n    DATABASE_SYNCRONIZE: Joi.boolean(),\n    DATABASE_PROTOCOL: Joi.string(),\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/event/event.options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        eventOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     EventEmitterModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  delimiter: '.',\n  global: true,\n  ignoreErrors: false,\n  maxListeners: 50,\n  newListener: false,\n  removeListener: false,\n  wildcard: false,\n  verboseMemoryLeak: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/environment/helper/get-environment.helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEnvironment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const environment = process.env.NODE_ENV;\n\n  switch (environment) {\n    case EnvironmentEntity.LOCAL:\n      return EnvironmentFileEntity.DEVELOPMENT_LOCAL;\n    case EnvironmentEntity.DEVELOPMENT:\n      return EnvironmentFileEntity.DEVELOPMENT_SERVER;\n    case EnvironmentEntity.TESTING:\n      return EnvironmentFileEntity.TESTING;\n    case EnvironmentEntity.PRODUCTION:\n      return EnvironmentFileEntity.PRODUCTION;\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/http/provider/http.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        httpProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpModuleAsyncOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  useClass: HttpOptions,\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/database/mongo/mongoose.options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MongooseOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  applicationConfig: ApplicationInterface,\n  databaseConfig: MongooseEnvironment,\n) => {\n  const isProduction =\n    applicationConfig.getNodeEnv() === EnvironmentEntity.PRODUCTION;\n\n  const protocol = `${databaseConfig.getDatabaseProtocol()}`;\n  const host = databaseConfig.getDatabaseHost();\n  const port = databaseConfig.getDatabasePort();\n\n  let uri = `${protocol}://${host}`\n\n  if (protocol === 'mongodb') uri += `:${port}`\n\n  return {\n    appName: applicationConfig.getAppName(),\n    autoCreate: !isProduction,\n    autoIndex: !isProduction,\n    connectTimeoutMS: 5000,\n    dbName: databaseConfig.getDatabaseName(),\n    enableUtf8Validation: true,\n    heartbeatFrequencyMS: 30000,\n    keepAlive: true,\n    keepAliveInitialDelay: 5000,\n    loggerLevel: isProduction ? 'error' : 'debug',\n    minPoolSize: 5,\n    maxPoolSize: 100,\n    pass: databaseConfig.getDatabasePassword(),\n    socketTimeoutMS: 30000,\n    uri: uri,\n    user: databaseConfig.getDatabaseUser(),\n  };\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/ioc/database/provider/mongoose.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MongooseProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MongooseModuleAsyncOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  imports: [EnvironmentModule],\n  useFactory: MongooseOptions,\n  inject: [ApplicationEnvironment, MongooseEnvironment],\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/ioc/database/provider/mysql-raw.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MysqlProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Provider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: CONNECTION_POOL,\n  useFactory: mysqlRawOptions,\n  inject: [ApplicationEnvironment, MysqlRawEnvironment],\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/database/mysql/mysql-raw.options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mysqlRawOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  applicationConfig: ApplicationInterface,\n  databaseConfig: DatabaseInterface,\n) => {\n  const isProduction =\n    applicationConfig.getNodeEnv() === EnvironmentEntity.PRODUCTION;\n\n  return createPool({\n    bigNumberStrings: true,\n    charset: 'UTF8_GENERAL_CI',\n    compress: true,\n    connectionLimit: 10,\n    connectTimeout: 10000,\n    database: databaseConfig.getDatabaseName(),\n    dateStrings: true,\n    debug: !isProduction,\n    decimalNumbers: true,\n    // enableKeepAlive: true,\n    host: databaseConfig.getDatabaseHost(),\n    insecureAuth: isProduction,\n    multipleStatements: true,\n    nestTables: true,\n    rowsAsArray: true,\n    user: databaseConfig.getDatabaseUser(),\n    password: databaseConfig.getDatabasePassword(),\n    port: databaseConfig.getDatabasePort(),\n    queueLimit: 50,\n    stringifyObjects: false,\n    supportBigNumbers: false,\n    trace: !isProduction,\n    timezone: 'local',\n    typeCast: true,\n    waitForConnections: true,\n  });\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/ioc/database/provider/mysql.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MysqlTypeOrmModuleOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TypeOrmModuleAsyncOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  useClass: MysqlOptions,\n  inject: [ApplicationEnvironment, MysqlTypeOrmEnvironment],\n  extraProviders: [ApplicationEnvironment, MysqlTypeOrmEnvironment],\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/ioc/cache/provider/redis.provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        redisModuleOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CacheModuleAsyncOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  useClass: RedisOptionsFactory,\n  isGlobal: true,\n  extraProviders: [RedisEnvironment],\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/security/ddos/throttler.options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        throttlerOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ThrottlerModuleOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  ttl: 60,\n  limit: 20,\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/validation/validation.options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validationGlobalPipe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): PipeTransform => {\n  const isEnableDebugMessages =\n    getEnvironment() !== EnvironmentFileEntity.PRODUCTION;\n\n  const options: CustomValidationInterface = {\n    always: true,\n    disableErrorMessages: false,\n    dismissDefaultMessages: true,\n    enableDebugMessages: isEnableDebugMessages,\n    errorHttpStatusCode: HttpStatus.BAD_REQUEST,\n    forbidNonWhitelisted: true,\n    forbidUnknownValues: true,\n    skipMissingProperties: false,\n    skipNullProperties: false,\n    skipUndefinedProperties: false,\n    stopAtFirstError: false,\n    'validationError.target': true,\n    'validationError.value': true,\n    whitelist: true,\n  };\n\n  return new ValidationPipe(options);\n}\n                    \n                \n\n\n        \n    \n\n    src/infrastructure/configuration/versioning/versioning.options.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        versioningOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (): VersioningOptions => {\n  return {\n    prefix: 'v',\n    type: VersioningType.URI,\n  };\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
